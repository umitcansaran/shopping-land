name: Deploy to Heroku

on:
  push:
    branches:
      - main  # Change this to your deployment branch if needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 3: Install Heroku CLI
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      # Step 4: Log in to Heroku Container Registry
      - name: Log in to Heroku
        run: echo "${{ secrets.HEROKU_API_KEY }}" | docker login --username=_ --password-stdin registry.heroku.com

      # Step 5: Build and push backend image to Heroku
      - name: Build and push backend image
        run: |
          docker pull umitcansaran/shopping-land-backend:latest
          docker tag umitcansaran/shopping-land-backend:latest registry.heroku.com/shopping-land/web-backend
          docker push registry.heroku.com/shopping-land/web-backend

      # Step 6: Build and push frontend image to Heroku
      - name: Build and push frontend image
        run: |
          docker pull umitcansaran/shopping-land-frontend:latest
          docker tag umitcansaran/shopping-land-frontend:latest registry.heroku.com/shopping-land/web-frontend
          docker push registry.heroku.com/shopping-land/web-frontend

      # Step 7: Build and push nginx image to Heroku
      - name: Build and push nginx image
        run: |
          docker pull umitcansaran/shopping-land-nginx:latest
          docker tag umitcansaran/shopping-land-nginx:latest registry.heroku.com/shopping-land/web
          docker push registry.heroku.com/shopping-land/web

      # Step 8: Release the container to Heroku
      - name: Release containers
        run: heroku container:release web --app shopping-land
