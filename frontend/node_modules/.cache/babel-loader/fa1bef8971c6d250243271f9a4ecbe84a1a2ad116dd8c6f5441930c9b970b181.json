{"ast":null,"code":"import { baseUrl } from \"../constants\";\nimport axios from \"axios\";\nimport { STORE_LIST_REQUEST, STORE_LIST_SUCCESS, STORE_LIST_FAIL, STORE_MY_LIST_REQUEST, STORE_MY_LIST_SUCCESS, STORE_MY_LIST_FAIL, STORE_CREATE_REQUEST, STORE_CREATE_SUCCESS, STORE_CREATE_FAIL, STORE_DELETE_REQUEST, STORE_DELETE_SUCCESS, STORE_DELETE_FAIL, STORE_DETAILS_REQUEST, STORE_DETAILS_SUCCESS, STORE_DETAILS_FAIL, STORE_STOCKS_REQUEST, STORE_STOCKS_SUCCESS, STORE_STOCKS_FAIL, STORES_BY_USER_REQUEST, STORES_BY_USER_SUCCESS, STORES_BY_USER_FAIL } from \"../constants/storeConstants\";\nexport const listStores = () => async dispatch => {\n  try {\n    dispatch({\n      type: STORE_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${baseUrl}/api/stores/`);\n    dispatch({\n      type: STORE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: STORE_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listMyStores = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: STORE_MY_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.access}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${baseUrl}/api/stores/mystores/`, config);\n    dispatch({\n      type: STORE_MY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: STORE_MY_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const createStore = formData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: STORE_CREATE_REQUEST\n    });\n\n    // const config = {\n    //     headers: {\n    //         'Content-type': 'application/json',\n    //         Authorization: `Bearer ${userInfo.token}`\n    //     }\n    // }\n\n    const {\n      data\n    } = await axios.post(`${baseUrl}/api/stores/new/`, formData);\n    dispatch({\n      type: STORE_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: STORE_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const deleteStore = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: STORE_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.access}`\n      }\n    };\n    await axios.delete(`${baseUrl}/api/stores/${id}/`, config);\n    dispatch({\n      type: STORE_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: STORE_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listStoreDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: STORE_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${baseUrl}/api/stores/${id}`);\n    dispatch({\n      type: STORE_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: STORE_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listStoreStocks = id => async dispatch => {\n  try {\n    dispatch({\n      type: STORE_STOCKS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${baseUrl}/api/stocks/store/${id}`);\n    dispatch({\n      type: STORE_STOCKS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: STORE_STOCKS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listStoresByUser = id => async dispatch => {\n  try {\n    dispatch({\n      type: STORES_BY_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${baseUrl}/api/stores/user/${id}`);\n    dispatch({\n      type: STORES_BY_USER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: STORES_BY_USER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["baseUrl","axios","STORE_LIST_REQUEST","STORE_LIST_SUCCESS","STORE_LIST_FAIL","STORE_MY_LIST_REQUEST","STORE_MY_LIST_SUCCESS","STORE_MY_LIST_FAIL","STORE_CREATE_REQUEST","STORE_CREATE_SUCCESS","STORE_CREATE_FAIL","STORE_DELETE_REQUEST","STORE_DELETE_SUCCESS","STORE_DELETE_FAIL","STORE_DETAILS_REQUEST","STORE_DETAILS_SUCCESS","STORE_DETAILS_FAIL","STORE_STOCKS_REQUEST","STORE_STOCKS_SUCCESS","STORE_STOCKS_FAIL","STORES_BY_USER_REQUEST","STORES_BY_USER_SUCCESS","STORES_BY_USER_FAIL","listStores","dispatch","type","data","get","payload","error","response","detail","message","listMyStores","getState","userLogin","userInfo","config","headers","Authorization","access","createStore","formData","post","deleteStore","id","delete","listStoreDetails","listStoreStocks","listStoresByUser"],"sources":["/Users/umit/Desktop/frontend/src/store/actions/storeActions.js"],"sourcesContent":["import { baseUrl } from \"../constants\";\nimport axios from \"axios\";\nimport {\n  STORE_LIST_REQUEST,\n  STORE_LIST_SUCCESS,\n  STORE_LIST_FAIL,\n  STORE_MY_LIST_REQUEST,\n  STORE_MY_LIST_SUCCESS,\n  STORE_MY_LIST_FAIL,\n  STORE_CREATE_REQUEST,\n  STORE_CREATE_SUCCESS,\n  STORE_CREATE_FAIL,\n  STORE_DELETE_REQUEST,\n  STORE_DELETE_SUCCESS,\n  STORE_DELETE_FAIL,\n  STORE_DETAILS_REQUEST,\n  STORE_DETAILS_SUCCESS,\n  STORE_DETAILS_FAIL,\n  STORE_STOCKS_REQUEST,\n  STORE_STOCKS_SUCCESS,\n  STORE_STOCKS_FAIL,\n  STORES_BY_USER_REQUEST,\n  STORES_BY_USER_SUCCESS,\n  STORES_BY_USER_FAIL,\n} from \"../constants/storeConstants\";\n\nexport const listStores = () => async (dispatch) => {\n  try {\n    dispatch({ type: STORE_LIST_REQUEST });\n\n    const { data } = await axios.get(`${baseUrl}/api/stores/`);\n\n    dispatch({\n      type: STORE_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: STORE_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listMyStores = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: STORE_MY_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.access}`,\n      },\n    };\n\n    const { data } = await axios.get(`${baseUrl}/api/stores/mystores/`, config);\n\n    dispatch({\n      type: STORE_MY_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: STORE_MY_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createStore = (formData) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: STORE_CREATE_REQUEST,\n    });\n\n    // const config = {\n    //     headers: {\n    //         'Content-type': 'application/json',\n    //         Authorization: `Bearer ${userInfo.token}`\n    //     }\n    // }\n\n    const { data } = await axios.post(`${baseUrl}/api/stores/new/`, formData);\n\n    dispatch({\n      type: STORE_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: STORE_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deleteStore = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: STORE_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.access}`,\n      },\n    };\n\n    await axios.delete(`${baseUrl}/api/stores/${id}/`, config);\n\n    dispatch({\n      type: STORE_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: STORE_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listStoreDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: STORE_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`${baseUrl}/api/stores/${id}`);\n\n    dispatch({\n      type: STORE_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: STORE_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listStoreStocks = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: STORE_STOCKS_REQUEST });\n\n    const { data } = await axios.get(`${baseUrl}/api/stocks/store/${id}`);\n\n    dispatch({\n      type: STORE_STOCKS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: STORE_STOCKS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listStoresByUser = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: STORES_BY_USER_REQUEST });\n\n    const { data } = await axios.get(`${baseUrl}/api/stores/user/${id}`);\n\n    dispatch({\n      type: STORES_BY_USER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: STORES_BY_USER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,cAAc;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,EAClBC,oBAAoB,EACpBC,oBAAoB,EACpBC,iBAAiB,EACjBC,oBAAoB,EACpBC,oBAAoB,EACpBC,iBAAiB,EACjBC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,EAClBC,oBAAoB,EACpBC,oBAAoB,EACpBC,iBAAiB,EACjBC,sBAAsB,EACtBC,sBAAsB,EACtBC,mBAAmB,QACd,6BAA6B;AAEpC,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAQ,IAAK;EAClD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEvB;IAAmB,CAAC,CAAC;IAEtC,MAAM;MAAEwB;IAAK,CAAC,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAE,GAAE3B,OAAQ,cAAa,CAAC;IAE1DwB,QAAQ,CAAC;MACPC,IAAI,EAAEtB,kBAAkB;MACxByB,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAErB,eAAe;MACrBwB,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GACxCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GAC1BF,KAAK,CAACG;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAM,OAAOT,QAAQ,EAAEU,QAAQ,KAAK;EAC9D,IAAI;IACFV,QAAQ,CAAC;MAAEC,IAAI,EAAEpB;IAAsB,CAAC,CAAC;IAEzC,MAAM;MACJ8B,SAAS,EAAE;QAAEC;MAAS;IACxB,CAAC,GAAGF,QAAQ,EAAE;IAEd,MAAMG,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAASH,QAAQ,CAACI,MAAO;MAC3C;IACF,CAAC;IAED,MAAM;MAAEd;IAAK,CAAC,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAE,GAAE3B,OAAQ,uBAAsB,EAAEqC,MAAM,CAAC;IAE3Eb,QAAQ,CAAC;MACPC,IAAI,EAAEnB,qBAAqB;MAC3BsB,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAElB,kBAAkB;MACxBqB,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GACxCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GAC1BF,KAAK,CAACG;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMS,WAAW,GAAIC,QAAQ,IAAK,OAAOlB,QAAQ,EAAEU,QAAQ,KAAK;EACrE,IAAI;IACFV,QAAQ,CAAC;MACPC,IAAI,EAAEjB;IACR,CAAC,CAAC;;IAEF;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAM;MAAEkB;IAAK,CAAC,GAAG,MAAMzB,KAAK,CAAC0C,IAAI,CAAE,GAAE3C,OAAQ,kBAAiB,EAAE0C,QAAQ,CAAC;IAEzElB,QAAQ,CAAC;MACPC,IAAI,EAAEhB,oBAAoB;MAC1BmB,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEf,iBAAiB;MACvBkB,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GACxCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GAC1BF,KAAK,CAACG;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMY,WAAW,GAAIC,EAAE,IAAK,OAAOrB,QAAQ,EAAEU,QAAQ,KAAK;EAC/D,IAAI;IACFV,QAAQ,CAAC;MACPC,IAAI,EAAEd;IACR,CAAC,CAAC;IAEF,MAAM;MACJwB,SAAS,EAAE;QAAEC;MAAS;IACxB,CAAC,GAAGF,QAAQ,EAAE;IAEd,MAAMG,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASH,QAAQ,CAACI,MAAO;MAC3C;IACF,CAAC;IAED,MAAMvC,KAAK,CAAC6C,MAAM,CAAE,GAAE9C,OAAQ,eAAc6C,EAAG,GAAE,EAAER,MAAM,CAAC;IAE1Db,QAAQ,CAAC;MACPC,IAAI,EAAEb;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOiB,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEZ,iBAAiB;MACvBe,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GACxCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GAC1BF,KAAK,CAACG;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMe,gBAAgB,GAAIF,EAAE,IAAK,MAAOrB,QAAQ,IAAK;EAC1D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEX;IAAsB,CAAC,CAAC;IAEzC,MAAM;MAAEY;IAAK,CAAC,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAE,GAAE3B,OAAQ,eAAc6C,EAAG,EAAC,CAAC;IAE/DrB,QAAQ,CAAC;MACPC,IAAI,EAAEV,qBAAqB;MAC3Ba,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAET,kBAAkB;MACxBY,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GACxCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GAC1BF,KAAK,CAACG;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMgB,eAAe,GAAIH,EAAE,IAAK,MAAOrB,QAAQ,IAAK;EACzD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAER;IAAqB,CAAC,CAAC;IAExC,MAAM;MAAES;IAAK,CAAC,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAE,GAAE3B,OAAQ,qBAAoB6C,EAAG,EAAC,CAAC;IAErErB,QAAQ,CAAC;MACPC,IAAI,EAAEP,oBAAoB;MAC1BU,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEN,iBAAiB;MACvBS,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GACxCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GAC1BF,KAAK,CAACG;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMiB,gBAAgB,GAAIJ,EAAE,IAAK,MAAOrB,QAAQ,IAAK;EAC1D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEL;IAAuB,CAAC,CAAC;IAE1C,MAAM;MAAEM;IAAK,CAAC,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAE,GAAE3B,OAAQ,oBAAmB6C,EAAG,EAAC,CAAC;IAEpErB,QAAQ,CAAC;MACPC,IAAI,EAAEJ,sBAAsB;MAC5BO,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEH,mBAAmB;MACzBM,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GACxCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,MAAM,GAC1BF,KAAK,CAACG;IACd,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}