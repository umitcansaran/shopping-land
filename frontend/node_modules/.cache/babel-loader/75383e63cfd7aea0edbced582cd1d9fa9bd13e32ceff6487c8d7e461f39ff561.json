{"ast":null,"code":"var _jsxFileName = \"/Users/umit/Desktop/frontend/src/components/AddressInputField.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport AddressSuggestions from \"../components/AddressSuggestions\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddressInputField = _ref => {\n  var _address$suggestions;\n  let {\n    setState\n  } = _ref;\n  const address = AddressSuggestions(\"\");\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \"Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      placeholder: \"Search\",\n      ...address,\n      isTyping: address.value !== \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), ((_address$suggestions = address.suggestions) === null || _address$suggestions === void 0 ? void 0 : _address$suggestions.length) > 0 && /*#__PURE__*/_jsxDEV(SuggestionWrapper, {\n      children: address.suggestions.map((suggestion, index) => {\n        return /*#__PURE__*/_jsxDEV(Suggestion, {\n          onClick: e => {\n            e.preventDefault();\n            const country = suggestion.context[suggestion.context.length - 1].text;\n            const city = suggestion.context.find(x => x.id.split(\".\")[0] === \"region\");\n            address.setValue(suggestion.place_name);\n            address.setSuggestions([]);\n            setState({\n              latitude: suggestion.geometry.coordinates[1].toFixed(6),\n              longitude: suggestion.geometry.coordinates[0].toFixed(6),\n              country,\n              city: city === null || city === void 0 ? void 0 : city.text,\n              address: suggestion.place_name\n            });\n          },\n          children: suggestion.place_name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = AddressInputField;\nexport default AddressInputField;\nconst SuggestionWrapper = styled.div`\n  background: white;\n  position: absolute;\n  width: 400px;\n  padding: 10px 20px;\n  border-radius: 0px 0px 10px 10px;\n`;\n_c2 = SuggestionWrapper;\nconst Suggestion = styled.p`\n  cursor: pointer;\n  max-width: 400px;\n`;\n_c3 = Suggestion;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AddressInputField\");\n$RefreshReg$(_c2, \"SuggestionWrapper\");\n$RefreshReg$(_c3, \"Suggestion\");","map":{"version":3,"names":["React","styled","AddressSuggestions","Form","AddressInputField","setState","address","value","suggestions","length","map","suggestion","index","e","preventDefault","country","context","text","city","find","x","id","split","setValue","place_name","setSuggestions","latitude","geometry","coordinates","toFixed","longitude","SuggestionWrapper","div","Suggestion","p"],"sources":["/Users/umit/Desktop/frontend/src/components/AddressInputField.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport AddressSuggestions from \"../components/AddressSuggestions\";\nimport { Form } from \"react-bootstrap\";\n\nconst AddressInputField = ({ setState }) => {\n  const address = AddressSuggestions(\"\");\n\n  return (\n    <Form.Group className=\"mb-4\">\n      <Form.Label>Address</Form.Label>\n      <Form.Control\n        placeholder=\"Search\"\n        {...address}\n        isTyping={address.value !== \"\"}\n      />\n      {address.suggestions?.length > 0 && (\n        <SuggestionWrapper>\n          {address.suggestions.map((suggestion, index) => {\n            return (\n              <Suggestion\n                key={index}\n                onClick={(e) => {\n                  e.preventDefault();\n                  const country =\n                    suggestion.context[suggestion.context.length - 1].text;\n                  const city = suggestion.context.find(\n                    (x) => x.id.split(\".\")[0] === \"region\"\n                  );\n                  address.setValue(suggestion.place_name);\n                  address.setSuggestions([]);\n                  setState({\n                    latitude: suggestion.geometry.coordinates[1].toFixed(6),\n                    longitude: suggestion.geometry.coordinates[0].toFixed(6),\n                    country,\n                    city: city?.text,\n                    address: suggestion.place_name,\n                  });\n                }}\n              >\n                {suggestion.place_name}\n              </Suggestion>\n            );\n          })}\n        </SuggestionWrapper>\n      )}\n    </Form.Group>\n  );\n};\n\nexport default AddressInputField;\n\nconst SuggestionWrapper = styled.div`\n  background: white;\n  position: absolute;\n  width: 400px;\n  padding: 10px 20px;\n  border-radius: 0px 0px 10px 10px;\n`;\n\nconst Suggestion = styled.p`\n  cursor: pointer;\n  max-width: 400px;\n`;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,kBAAkB,MAAM,kCAAkC;AACjE,SAASC,IAAI,QAAQ,iBAAiB;AAAC;AAEvC,MAAMC,iBAAiB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACrC,MAAMC,OAAO,GAAGJ,kBAAkB,CAAC,EAAE,CAAC;EAEtC,oBACE,QAAC,IAAI,CAAC,KAAK;IAAC,SAAS,EAAC,MAAM;IAAA,wBAC1B,QAAC,IAAI,CAAC,KAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eAChC,QAAC,IAAI,CAAC,OAAO;MACX,WAAW,EAAC,QAAQ;MAAA,GAChBI,OAAO;MACX,QAAQ,EAAEA,OAAO,CAACC,KAAK,KAAK;IAAG;MAAA;MAAA;MAAA;IAAA,QAC/B,EACD,yBAAAD,OAAO,CAACE,WAAW,yDAAnB,qBAAqBC,MAAM,IAAG,CAAC,iBAC9B,QAAC,iBAAiB;MAAA,UACfH,OAAO,CAACE,WAAW,CAACE,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAK;QAC9C,oBACE,QAAC,UAAU;UAET,OAAO,EAAGC,CAAC,IAAK;YACdA,CAAC,CAACC,cAAc,EAAE;YAClB,MAAMC,OAAO,GACXJ,UAAU,CAACK,OAAO,CAACL,UAAU,CAACK,OAAO,CAACP,MAAM,GAAG,CAAC,CAAC,CAACQ,IAAI;YACxD,MAAMC,IAAI,GAAGP,UAAU,CAACK,OAAO,CAACG,IAAI,CACjCC,CAAC,IAAKA,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CACvC;YACDhB,OAAO,CAACiB,QAAQ,CAACZ,UAAU,CAACa,UAAU,CAAC;YACvClB,OAAO,CAACmB,cAAc,CAAC,EAAE,CAAC;YAC1BpB,QAAQ,CAAC;cACPqB,QAAQ,EAAEf,UAAU,CAACgB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;cACvDC,SAAS,EAAEnB,UAAU,CAACgB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;cACxDd,OAAO;cACPG,IAAI,EAAEA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAED,IAAI;cAChBX,OAAO,EAAEK,UAAU,CAACa;YACtB,CAAC,CAAC;UACJ,CAAE;UAAA,UAEDb,UAAU,CAACa;QAAU,GAnBjBZ,KAAK;UAAA;UAAA;UAAA;QAAA,QAoBC;MAEjB,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEL;EAAA;IAAA;IAAA;IAAA;EAAA,QACU;AAEjB,CAAC;AAAC,KA3CIR,iBAAiB;AA6CvB,eAAeA,iBAAiB;AAEhC,MAAM2B,iBAAiB,GAAG9B,MAAM,CAAC+B,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MANID,iBAAiB;AAQvB,MAAME,UAAU,GAAGhC,MAAM,CAACiC,CAAE;AAC5B;AACA;AACA,CAAC;AAAC,MAHID,UAAU;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}