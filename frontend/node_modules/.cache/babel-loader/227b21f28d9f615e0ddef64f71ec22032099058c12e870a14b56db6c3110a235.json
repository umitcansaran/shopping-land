{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst AddressSuggestions = initialValue => {\n  _s();\n  const [value, setValue] = useState(initialValue);\n  const [suggestions, setSuggestions] = useState([]);\n  const [latitude, setLatitude] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const handleChange = async event => {\n    setValue(event.target.value);\n    const endpoint = `https://api.mapbox.com/geocoding/v5/mapbox.places/${event.target.value}.json?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`;\n    const response = await fetch(endpoint);\n    const results = await response.json();\n    setSuggestions(results === null || results === void 0 ? void 0 : results.features);\n  };\n  return {\n    onChange: handleChange,\n    value,\n    setValue,\n    suggestions,\n    setSuggestions,\n    latitude,\n    setLatitude,\n    longitude,\n    setLongitude\n  };\n};\n_s(AddressSuggestions, \"aqPDpeU+MN8d/Da4c+Jss6KMjl8=\");\n_c = AddressSuggestions;\nexport default AddressSuggestions;\nvar _c;\n$RefreshReg$(_c, \"AddressSuggestions\");","map":{"version":3,"names":["useState","AddressSuggestions","initialValue","value","setValue","suggestions","setSuggestions","latitude","setLatitude","longitude","setLongitude","handleChange","event","target","endpoint","process","env","REACT_APP_MAPBOX_TOKEN","response","fetch","results","json","features","onChange"],"sources":["/Users/umit/Desktop/frontend/src/components/AddressSuggestions.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst AddressSuggestions = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n  const [suggestions, setSuggestions] = useState([]);\n  const [latitude, setLatitude] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n\n  const handleChange = async (event) => {\n    setValue(event.target.value);\n    const endpoint = `https://api.mapbox.com/geocoding/v5/mapbox.places/${event.target.value}.json?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`;\n    const response = await fetch(endpoint);\n    const results = await response.json();\n    setSuggestions(results?.features);\n  };\n\n  return {\n    onChange: handleChange,\n    value,\n    setValue,\n    suggestions,\n    setSuggestions,\n    latitude,\n    setLatitude,\n    longitude,\n    setLongitude,\n  };\n};\n\nexport default AddressSuggestions;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,kBAAkB,GAAIC,YAAY,IAAK;EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAACE,YAAY,CAAC;EAChD,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMW,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCR,QAAQ,CAACQ,KAAK,CAACC,MAAM,CAACV,KAAK,CAAC;IAC5B,MAAMW,QAAQ,GAAI,qDAAoDF,KAAK,CAACC,MAAM,CAACV,KAAM,sBAAqBY,OAAO,CAACC,GAAG,CAACC,sBAAuB,EAAC;IAClJ,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,QAAQ,CAAC;IACtC,MAAMM,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACrCf,cAAc,CAACc,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,QAAQ,CAAC;EACnC,CAAC;EAED,OAAO;IACLC,QAAQ,EAAEZ,YAAY;IACtBR,KAAK;IACLC,QAAQ;IACRC,WAAW;IACXC,cAAc;IACdC,QAAQ;IACRC,WAAW;IACXC,SAAS;IACTC;EACF,CAAC;AACH,CAAC;AAAC,GAzBIT,kBAAkB;AAAA,KAAlBA,kBAAkB;AA2BxB,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}