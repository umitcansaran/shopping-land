{"ast":null,"code":"import React from\"react\";import styled from\"styled-components\";import AddressSuggestions from\"../components/AddressSuggestions\";import{Form}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AddressInputField=_ref=>{var _address$suggestions;let{setState}=_ref;const address=AddressSuggestions(\"\");return/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{placeholder:\"Search\",...address,isTyping:address.value!==\"\"}),((_address$suggestions=address.suggestions)===null||_address$suggestions===void 0?void 0:_address$suggestions.length)>0&&/*#__PURE__*/_jsx(SuggestionWrapper,{children:address.suggestions.map((suggestion,index)=>{return/*#__PURE__*/_jsx(Suggestion,{onClick:e=>{e.preventDefault();const country=suggestion.context[suggestion.context.length-1].text;const city=suggestion.context.find(x=>x.id.split(\".\")[0]===\"region\");address.setValue(suggestion.place_name);address.setSuggestions([]);setState({latitude:suggestion.geometry.coordinates[1].toFixed(6),longitude:suggestion.geometry.coordinates[0].toFixed(6),country,city:city===null||city===void 0?void 0:city.text,address:suggestion.place_name});},children:suggestion.place_name},index);})})]});};export default AddressInputField;const SuggestionWrapper=styled.div`\n  background: white;\n  position: absolute;\n  width: 400px;\n  padding: 10px 20px;\n  border-radius: 0px 0px 10px 10px;\n`;const Suggestion=styled.p`\n  cursor: pointer;\n  max-width: 400px;\n`;","map":{"version":3,"names":["React","styled","AddressSuggestions","Form","AddressInputField","setState","address","value","suggestions","length","map","suggestion","index","e","preventDefault","country","context","text","city","find","x","id","split","setValue","place_name","setSuggestions","latitude","geometry","coordinates","toFixed","longitude","SuggestionWrapper","div","Suggestion","p"],"sources":["/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/AddressInputField.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport AddressSuggestions from \"../components/AddressSuggestions\";\nimport { Form } from \"react-bootstrap\";\n\nconst AddressInputField = ({ setState }) => {\n  const address = AddressSuggestions(\"\");\n\n  return (\n    <Form.Group className=\"mb-4\">\n      <Form.Label>Address</Form.Label>\n      <Form.Control\n        placeholder=\"Search\"\n        {...address}\n        isTyping={address.value !== \"\"}\n      />\n      {address.suggestions?.length > 0 && (\n        <SuggestionWrapper>\n          {address.suggestions.map((suggestion, index) => {\n            return (\n              <Suggestion\n                key={index}\n                onClick={(e) => {\n                  e.preventDefault();\n                  const country =\n                    suggestion.context[suggestion.context.length - 1].text;\n                  const city = suggestion.context.find(\n                    (x) => x.id.split(\".\")[0] === \"region\"\n                  );\n                  address.setValue(suggestion.place_name);\n                  address.setSuggestions([]);\n                  setState({\n                    latitude: suggestion.geometry.coordinates[1].toFixed(6),\n                    longitude: suggestion.geometry.coordinates[0].toFixed(6),\n                    country,\n                    city: city?.text,\n                    address: suggestion.place_name,\n                  });\n                }}\n              >\n                {suggestion.place_name}\n              </Suggestion>\n            );\n          })}\n        </SuggestionWrapper>\n      )}\n    </Form.Group>\n  );\n};\n\nexport default AddressInputField;\n\nconst SuggestionWrapper = styled.div`\n  background: white;\n  position: absolute;\n  width: 400px;\n  padding: 10px 20px;\n  border-radius: 0px 0px 10px 10px;\n`;\n\nconst Suggestion = styled.p`\n  cursor: pointer;\n  max-width: 400px;\n`;\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,OAAM,KAAM,mBAAmB,CACtC,MAAOC,mBAAkB,KAAM,kCAAkC,CACjE,OAASC,IAAI,KAAQ,iBAAiB,CAAC,wFAEvC,KAAMC,kBAAiB,CAAG,MAAkB,6BAAjB,CAAEC,QAAS,CAAC,MACrC,KAAMC,QAAO,CAAGJ,kBAAkB,CAAC,EAAE,CAAC,CAEtC,mBACE,MAAC,IAAI,CAAC,KAAK,EAAC,SAAS,CAAC,MAAM,wBAC1B,KAAC,IAAI,CAAC,KAAK,sBAAqB,cAChC,KAAC,IAAI,CAAC,OAAO,EACX,WAAW,CAAC,QAAQ,IAChBI,OAAO,CACX,QAAQ,CAAEA,OAAO,CAACC,KAAK,GAAK,EAAG,EAC/B,CACD,uBAAAD,OAAO,CAACE,WAAW,+CAAnB,qBAAqBC,MAAM,EAAG,CAAC,eAC9B,KAAC,iBAAiB,WACfH,OAAO,CAACE,WAAW,CAACE,GAAG,CAAC,CAACC,UAAU,CAAEC,KAAK,GAAK,CAC9C,mBACE,KAAC,UAAU,EAET,OAAO,CAAGC,CAAC,EAAK,CACdA,CAAC,CAACC,cAAc,EAAE,CAClB,KAAMC,QAAO,CACXJ,UAAU,CAACK,OAAO,CAACL,UAAU,CAACK,OAAO,CAACP,MAAM,CAAG,CAAC,CAAC,CAACQ,IAAI,CACxD,KAAMC,KAAI,CAAGP,UAAU,CAACK,OAAO,CAACG,IAAI,CACjCC,CAAC,EAAKA,CAAC,CAACC,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAK,QAAQ,CACvC,CACDhB,OAAO,CAACiB,QAAQ,CAACZ,UAAU,CAACa,UAAU,CAAC,CACvClB,OAAO,CAACmB,cAAc,CAAC,EAAE,CAAC,CAC1BpB,QAAQ,CAAC,CACPqB,QAAQ,CAAEf,UAAU,CAACgB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CACvDC,SAAS,CAAEnB,UAAU,CAACgB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CACxDd,OAAO,CACPG,IAAI,CAAEA,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAED,IAAI,CAChBX,OAAO,CAAEK,UAAU,CAACa,UACtB,CAAC,CAAC,CACJ,CAAE,UAEDb,UAAU,CAACa,UAAU,EAnBjBZ,KAAK,CAoBC,CAEjB,CAAC,CAAC,EAEL,GACU,CAEjB,CAAC,CAED,cAAeR,kBAAiB,CAEhC,KAAM2B,kBAAiB,CAAG9B,MAAM,CAAC+B,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAMC,WAAU,CAAGhC,MAAM,CAACiC,CAAE;AAC5B;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}