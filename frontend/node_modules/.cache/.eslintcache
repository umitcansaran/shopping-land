[{"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/index.js":"1","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/App.js":"2","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/reportWebVitals.js":"3","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/index.js":"4","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/Footer.js":"5","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/Header.js":"6","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyProducts/index.js":"7","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyProfile/index.js":"8","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Home/index.js":"9","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Login/index.js":"10","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyStores/index.js":"11","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Register/index.js":"12","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Seller/index.js":"13","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/AddProduct/index.js":"14","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/AddStore/index.js":"15","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Map/index.js":"16","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Product/index.js":"17","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Sellers/index.js":"18","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/PlaceOrder/index.js":"19","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Payment/index.js":"20","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Cart/index.js":"21","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/CustomerOrders/index.js":"22","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/CustomerOrder/index.js":"23","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/SellerOrder/index.js":"24","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Shipping/index.js":"25","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/userActions.js":"26","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/SellerOrders/index.js":"27","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/index.js":"28","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/DeletePopup.js":"29","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/SearchBox.js":"30","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/Loader.js":"31","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/storeActions.js":"32","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/productActions.js":"33","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/stockActions.js":"34","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/EditProfileScreen.js":"35","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/ProductCard.js":"36","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/Notification.js":"37","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyProducts/AddProductButton.js":"38","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Home/LatestSellers.js":"39","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/categoriesActions.js":"40","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyProducts/MyProductStocks.js":"41","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyProducts/ProductButtons.js":"42","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Home/HomeSidebar.js":"43","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Home/ProductCarousel.js":"44","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Home/HomeCategoriesBar.js":"45","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/searchAction.js":"46","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Home/LatestReviews.js":"47","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyStores/AddStoreButton.js":"48","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyStores/StoreButtons.js":"49","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyStores/StoreStocks.js":"50","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/utils/useDebounce.js":"51","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/Message.js":"52","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/productConstants.js":"53","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/FormContainer.js":"54","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/storeConstants.js":"55","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/Rating.js":"56","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/cartActions.js":"57","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/userConstants.js":"58","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/AddressInputField.js":"59","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/utils/isNumberDecimal.js":"60","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Product/StocksCart.js":"61","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/stockConstants.js":"62","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants.js":"63","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/CheckoutSteps.js":"64","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/orderActions.js":"65","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/CustomerOrder/OrderItemCard.js":"66","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/orderConstants.js":"67","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/SellerOrder/OrderItemCard.js":"68","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/userReducers.js":"69","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/stockReducers.js":"70","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/cartReducers.js":"71","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/orderReducers.js":"72","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/categoriesReducers.js":"73","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/storeReducers.js":"74","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/productReducers.js":"75","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/categoriesConstants.js":"76","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/searchConstants.js":"77","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/cartConstants.js":"78","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/AddressSuggestions.js":"79"},{"size":970,"mtime":1702209612000,"results":"80","hashOfConfig":"81"},{"size":2561,"mtime":1702209612000,"results":"82","hashOfConfig":"81"},{"size":364,"mtime":1702209612000,"results":"83","hashOfConfig":"81"},{"size":1288,"mtime":1702209612000,"results":"84","hashOfConfig":"81"},{"size":323,"mtime":1702209612000,"results":"85","hashOfConfig":"81"},{"size":5793,"mtime":1735697779859,"results":"86","hashOfConfig":"81"},{"size":8703,"mtime":1735930093532,"results":"87","hashOfConfig":"81"},{"size":4998,"mtime":1735872138884,"results":"88","hashOfConfig":"81"},{"size":6671,"mtime":1735873213122,"results":"89","hashOfConfig":"81"},{"size":3245,"mtime":1702209612000,"results":"90","hashOfConfig":"81"},{"size":6957,"mtime":1702209612000,"results":"91","hashOfConfig":"81"},{"size":3746,"mtime":1702209612000,"results":"92","hashOfConfig":"81"},{"size":6177,"mtime":1735855677687,"results":"93","hashOfConfig":"81"},{"size":6469,"mtime":1735862062243,"results":"94","hashOfConfig":"81"},{"size":6967,"mtime":1702209612000,"results":"95","hashOfConfig":"81"},{"size":5186,"mtime":1735763726675,"results":"96","hashOfConfig":"81"},{"size":11690,"mtime":1702209612000,"results":"97","hashOfConfig":"81"},{"size":3735,"mtime":1735873047743,"results":"98","hashOfConfig":"81"},{"size":11289,"mtime":1702209612000,"results":"99","hashOfConfig":"81"},{"size":1688,"mtime":1702209612000,"results":"100","hashOfConfig":"81"},{"size":10097,"mtime":1702209612000,"results":"101","hashOfConfig":"81"},{"size":2407,"mtime":1702209612000,"results":"102","hashOfConfig":"81"},{"size":14776,"mtime":1702209612000,"results":"103","hashOfConfig":"81"},{"size":11568,"mtime":1702209612000,"results":"104","hashOfConfig":"81"},{"size":2782,"mtime":1702209612000,"results":"105","hashOfConfig":"81"},{"size":9749,"mtime":1735872142820,"results":"106","hashOfConfig":"81"},{"size":3058,"mtime":1702209612000,"results":"107","hashOfConfig":"81"},{"size":3255,"mtime":1702209612000,"results":"108","hashOfConfig":"81"},{"size":1231,"mtime":1702209612000,"results":"109","hashOfConfig":"81"},{"size":1276,"mtime":1702209612000,"results":"110","hashOfConfig":"81"},{"size":356,"mtime":1702209612000,"results":"111","hashOfConfig":"81"},{"size":4574,"mtime":1734981253115,"results":"112","hashOfConfig":"81"},{"size":7512,"mtime":1735872071674,"results":"113","hashOfConfig":"81"},{"size":2467,"mtime":1702209612000,"results":"114","hashOfConfig":"81"},{"size":4250,"mtime":1702209612000,"results":"115","hashOfConfig":"81"},{"size":2481,"mtime":1734805556575,"results":"116","hashOfConfig":"81"},{"size":616,"mtime":1702209612000,"results":"117","hashOfConfig":"81"},{"size":885,"mtime":1702209612000,"results":"118","hashOfConfig":"81"},{"size":1413,"mtime":1702209612000,"results":"119","hashOfConfig":"81"},{"size":1397,"mtime":1702209612000,"results":"120","hashOfConfig":"81"},{"size":5506,"mtime":1702209612000,"results":"121","hashOfConfig":"81"},{"size":1512,"mtime":1702209612000,"results":"122","hashOfConfig":"81"},{"size":892,"mtime":1735873448682,"results":"123","hashOfConfig":"81"},{"size":1231,"mtime":1702209612000,"results":"124","hashOfConfig":"81"},{"size":612,"mtime":1702209612000,"results":"125","hashOfConfig":"81"},{"size":7595,"mtime":1702209612000,"results":"126","hashOfConfig":"81"},{"size":1887,"mtime":1734635177600,"results":"127","hashOfConfig":"81"},{"size":879,"mtime":1702209612000,"results":"128","hashOfConfig":"81"},{"size":1502,"mtime":1702209612000,"results":"129","hashOfConfig":"81"},{"size":3483,"mtime":1702209612000,"results":"130","hashOfConfig":"81"},{"size":774,"mtime":1702209612000,"results":"131","hashOfConfig":"81"},{"size":192,"mtime":1702209612000,"results":"132","hashOfConfig":"81"},{"size":2613,"mtime":1702209612000,"results":"133","hashOfConfig":"81"},{"size":332,"mtime":1702209612000,"results":"134","hashOfConfig":"81"},{"size":1517,"mtime":1702209612000,"results":"135","hashOfConfig":"81"},{"size":1512,"mtime":1702209612000,"results":"136","hashOfConfig":"81"},{"size":1876,"mtime":1702209612000,"results":"137","hashOfConfig":"81"},{"size":3308,"mtime":1702209612000,"results":"138","hashOfConfig":"81"},{"size":1884,"mtime":1702209612000,"results":"139","hashOfConfig":"81"},{"size":160,"mtime":1702209612000,"results":"140","hashOfConfig":"81"},{"size":5109,"mtime":1702209612000,"results":"141","hashOfConfig":"81"},{"size":932,"mtime":1702209612000,"results":"142","hashOfConfig":"81"},{"size":46,"mtime":1735695923382,"results":"143","hashOfConfig":"81"},{"size":1493,"mtime":1702209612000,"results":"144","hashOfConfig":"81"},{"size":9542,"mtime":1702209612000,"results":"145","hashOfConfig":"81"},{"size":1778,"mtime":1702209612000,"results":"146","hashOfConfig":"81"},{"size":2965,"mtime":1702209612000,"results":"147","hashOfConfig":"81"},{"size":2121,"mtime":1702209612000,"results":"148","hashOfConfig":"81"},{"size":6903,"mtime":1702209612000,"results":"149","hashOfConfig":"81"},{"size":2173,"mtime":1702209612000,"results":"150","hashOfConfig":"81"},{"size":1335,"mtime":1702209612000,"results":"151","hashOfConfig":"81"},{"size":6816,"mtime":1702209612000,"results":"152","hashOfConfig":"81"},{"size":1222,"mtime":1702209612000,"results":"153","hashOfConfig":"81"},{"size":4007,"mtime":1702209612000,"results":"154","hashOfConfig":"81"},{"size":6018,"mtime":1702209612000,"results":"155","hashOfConfig":"81"},{"size":509,"mtime":1702209612000,"results":"156","hashOfConfig":"81"},{"size":1614,"mtime":1702209612000,"results":"157","hashOfConfig":"81"},{"size":293,"mtime":1702209612000,"results":"158","hashOfConfig":"81"},{"size":856,"mtime":1702209612000,"results":"159","hashOfConfig":"81"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},"13pe1v",{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"163"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"163"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"163"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"163"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"163"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"163"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"163"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"163"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"163"},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"163"},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"163"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"163"},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/index.js",[],[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/App.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/reportWebVitals.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/index.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/Footer.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/Header.js",["412","413","414","415"],[],"import React, { useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Navbar,\n  Nav,\n  Badge,\n  Container,\n  NavDropdown,\n  Row,\n  Image,\n} from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { myDetails, logout } from \"../store/actions/userActions\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { user } = useSelector((state) => state.myDetails);\n  const { cartItems } = useSelector((state) => state.cart);\n\n  const cartItemsQuantities = Object.values(cartItems).reduce(\n    (accumulator, cartItem) => accumulator + cartItem.quantity,\n    0\n  );\n\n  useEffect(() => {\n    dispatch(myDetails());\n  }, [dispatch]);\n\n  const logoutHandler = () => {\n    dispatch(logout());\n    navigate(\"/\");\n  };\n\n  const isMobile = window.innerWidth < 991;\n\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Container fluid className=\"mx-1\">\n        <Navbar.Brand\n          as={Link}\n          to=\"/\"\n          style={{\n            fontFamily: \"Alexandria\",\n            color: \"#495b7a\",\n            border: \"solid 0.2rem #1e478a\",\n            padding: \"0.2rem 0.7rem\",\n          }}\n        >\n          <strong>shopping-land.ch</strong>\n        </Navbar.Brand>\n        <Navbar.Toggle\n          aria-controls=\"basic-navbar-nav\"\n          style={{\n            width: \"2rem\",\n            backgroundImage:\n              \"url('https://shoppingland.s3.eu-central-1.amazonaws.com/menu.svg')\",\n          }}\n        />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link\n              as={Link}\n              className={isMobile ? \"mt-2\" : \"ms-5 \" + \" header-nav-link\"}\n              to=\"/sellers\"\n              style={{ color: \"rgb(70, 69, 69)\" }}\n            >\n              <i className=\"fa-solid fa-store\" style={{ color: \"#1e478a\" }}></i>{\" \"}\n              Sellers\n            </Nav.Link>\n            <Nav.Link\n              as={Link}\n              className={isMobile ? \"\" : \"ms-5\" + \" header-nav-link\"}\n              to=\"/map\"\n              style={{ color: \"rgb(70, 69, 69)\" }}\n            >\n              <i\n                className=\"fa-solid fa-location-dot\"\n                style={{ color: \"#1e478a\" }}\n              ></i>{\" \"}\n              Find a Store\n            </Nav.Link>\n          </Nav>\n          <Nav className=\"me-4\">\n            {user && user.profile.status === \"CUSTOMER\" && (\n              <>\n                <Row className=\"align-items-center\">\n                  <img\n                    src={user && user.profile.image}\n                    alt=\"customer-profile\"\n                    style={{ width: \"3.3rem\", height: \"auto\" }}\n                  />\n                </Row>\n                <NavDropdown title={user.username} id=\"basic-nav-dropdown\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/customer-orders\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            )}\n            {user ? (\n              user.profile.status === \"STORE_OWNER\" && (\n                <>\n                  <NavDropdown\n                    title={\n                      <Image\n                        src={user && user.profile.image}\n                        alt=\"retailer-profile\"\n                        style={{ maxHeight: \"1.6rem\", maxWidth: \"4rem\" }}\n                      />\n                    }\n                    id=\"adminmenu\"\n                  >\n                    <LinkContainer to=\"/profile\">\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to=\"/mystores\">\n                      <NavDropdown.Item>Stores</NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to=\"/myproducts\">\n                      <NavDropdown.Item>Products</NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to=\"/seller-orders\">\n                      <NavDropdown.Item>Orders</NavDropdown.Item>\n                    </LinkContainer>\n                    <NavDropdown.Item onClick={logoutHandler}>\n                      Logout\n                    </NavDropdown.Item>\n                  </NavDropdown>\n                </>\n              )\n            ) : (\n              <Nav.Link\n                as={Link}\n                className={isMobile ? \"\" : \"ms-5\" + \" header-nav-link\"}\n                to=\"/login\"\n              >\n                <i\n                  class=\"fa-solid fa-user\"\n                  style={{ color: \"#1e478a\", marginRight: \"0.3rem\" }}\n                ></i>\n                Sign In\n              </Nav.Link>\n            )}\n            <Nav.Link\n              as={Link}\n              className={isMobile ? \"\" : \"ms-5\" + \" header-nav-link\"}\n              to=\"/cart\"\n              style={{ color: \"rgb(70, 69, 69)\" }}\n            >\n              <i\n                className=\"fa-solid fa-cart-shopping\"\n                style={{ color: \"#1e478a\", marginRight: \"0.3rem\" }}\n              ></i>\n              Cart\n              {cartItemsQuantities > 0 && (\n                <Badge bg=\"primary\" pill style={{ borderRadius: \"0\" }}>\n                  {cartItemsQuantities}\n                </Badge>\n              )}\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyProducts/index.js",["416","417"],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyProfile/index.js",["418"],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Home/index.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Login/index.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyStores/index.js",["419","420"],[],"import React, { useEffect, useState } from \"react\";\nimport { Button, Container, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listMyStores, deleteStore } from \"../../store/actions/storeActions\";\nimport AddStoreButton from \"./AddStoreButton\";\nimport { listMyProducts } from \"../../store/actions/productActions\";\nimport { listStocks } from \"../../store/actions/stockActions\";\nimport { search } from \"../../store/actions/searchAction\";\nimport Notification from \"../../components/Notification\";\nimport { useLocation } from \"react-router-dom\";\nimport { STORE_DELETE_RESET } from \"../../store/constants/storeConstants\";\nimport DeletePopup from \"../../components/DeletePopup\";\nimport SearchBox from \"../../components/SearchBox\";\nimport StoreButtons from \"./StoreButtons\";\nimport StoreStocks from \"./StoreStocks\";\nimport Loader from \"../../components/Loader\";\n\nfunction MyStores() {\n  const [viewButton, setViewButton] = useState({});\n  const [value, setValue] = useState(\"\");\n  const [deleteConfirm, setDeleteConfirm] = useState(null);\n  const [deleteWindow, setDeleteWindow] = useState(false);\n  const [storeToDelete, setStoreToDelete] = useState(null);\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const { createStoreSuccess } = location.state ? location.state : false;\n\n  const { myStores, loading: myStoresLoading } = useSelector(\n    (state) => state.storeMyList\n  );\n  const { success: deleteStoreSuccess, error } = useSelector(\n    (state) => state.storeDelete\n  );\n\n  useEffect(() => {\n    if (createStoreSuccess) {\n      setTimeout(() => {\n        window.history.replaceState({}, document.title);\n      }, 500);\n    }\n    dispatch(listMyProducts());\n    if (value.length === 0) {\n      dispatch(listMyStores());\n    }\n  }, [dispatch, value, createStoreSuccess, deleteStoreSuccess]);\n\n  useEffect(() => {\n    if (deleteConfirm === \"store\") {\n      setDeleteConfirm(null);\n      setDeleteWindow(false);\n      setTimeout(() => {\n        dispatch(deleteStore(storeToDelete.id));\n      }, 50);\n    }\n  }, [dispatch, deleteConfirm, storeToDelete]);\n\n  useEffect(() => {\n    dispatch({ type: STORE_DELETE_RESET });\n  }, [dispatch]);\n\n  const searchHandler = (e, storeName) => {\n    setValue(e.target.value);\n    dispatch(\n      search({\n        type: \"products_in_my_store\",\n        store: storeName,\n        searchString: e.target.value,\n      })\n    );\n  };\n\n  const viewStockHandler = (index) => {\n    Object.keys(viewButton).forEach((key) => {\n      viewButton[key] = false;\n    });\n    setViewButton({\n      ...viewButton,\n      [index]: true,\n    });\n    setValue(\"\");\n    dispatch(listStocks());\n  };\n\n  const closeStockHandler = (index) => {\n    setViewButton({\n      ...viewButton,\n      [index]: false,\n    });\n  };\n\n  const deleteStoreHandler = (store) => {\n    setDeleteWindow(true);\n    setStoreToDelete(store);\n  };\n\n  return (\n    <Container fluid>\n      <SearchBox\n        searchProps={{ type: \"my_stores\" }}\n        value={value}\n        setValue={setValue}\n        placeholder=\"Search for id or name\"\n      />\n      <AddStoreButton />\n      {myStoresLoading ? (\n        <Loader />\n      ) : (\n        myStores.length != 0 && (\n          <Table\n            striped\n            hover\n            responsive\n            className=\"table-sm my-2\"\n            style={{ width: \"100%\" }}\n          >\n            <thead style={{ backgroundColor: \"#f2f5fa\" }}>\n              <tr style={{ textAlign: \"center\" }}>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>ADDRESS</th>\n                <th>PHONE</th>\n                <th className=\"d-none d-sm-table-cell\">PRODUCT</th>\n                <th className=\"d-none d-sm-table-cell\">DELETE</th>\n              </tr>\n            </thead>\n            <tbody>\n              {myStores.map((store, index) => (\n                <>\n                  <tr style={{ textAlign: \"center\" }}>\n                    <td>{index + 1}</td>\n                    <td>\n                      <strong>{store.name}</strong>\n                    </td>\n                    <td>{store.address}</td>\n                    <td>{store.phone}</td>\n                    <td\n                      style={{ width: \"11rem\", textAlign: \"center\" }}\n                      className=\"d-none d-sm-table-cell\"\n                    >\n                      {viewButton[index] ? (\n                        <Button\n                          onClick={() => {\n                            closeStockHandler(index);\n                          }}\n                          stye={{ color: \"#f2f5fa\" }}\n                          className=\"btn-block blue-button\"\n                        >\n                          Close\n                        </Button>\n                      ) : (\n                        <Button\n                          onClick={() => {\n                            viewStockHandler(index);\n                          }}\n                          stye={{ color: \"#f2f5fa\" }}\n                          className=\"btn-block blue-button\"\n                        >\n                          View Products\n                        </Button>\n                      )}\n                    </td>\n                    <td\n                      style={{ width: \"8rem\", textAlign: \"center\" }}\n                      className=\"d-none d-sm-table-cell\"\n                    >\n                      <Button\n                        onClick={() => {\n                          deleteStoreHandler(store);\n                        }}\n                        className=\"btn-block red-button\"\n                      >\n                        Delete\n                      </Button>\n                    </td>\n                  </tr>\n                  {/* renders only on mobile screens */}\n                  <StoreButtons\n                    store={store}\n                    index={index}\n                    viewButton={viewButton}\n                    viewStockHandler={viewStockHandler}\n                    closeStockHandler={closeStockHandler}\n                    deleteStoreHandler={deleteStoreHandler}\n                  />\n                  {viewButton[index] && (\n                    <StoreStocks\n                      store={store}\n                      searchHandler={searchHandler}\n                      value={value}\n                    />\n                  )}\n                </>\n              ))}\n            </tbody>\n          </Table>\n        )\n      )}\n\n      {deleteWindow && (\n        <DeletePopup\n          setDeleteWindow={setDeleteWindow}\n          setDeleteConfirm={setDeleteConfirm}\n          item={{ type: \"store\", details: storeToDelete }}\n        />\n      )}\n      {deleteStoreSuccess && (\n        <Notification status=\"success\" message=\"Store Deleted Successfully!\" />\n      )}\n      {createStoreSuccess && (\n        <Notification status=\"success\" message=\"Store Created Successfully!\" />\n      )}\n    </Container>\n  );\n}\n\nexport default MyStores;\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Register/index.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Seller/index.js",["421"],[],"import React, { useEffect, useState } from \"react\";\nimport { Row, Col, ListGroup, Form, Button, Image } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProductsByUser } from \"../../store/actions/productActions\";\nimport { search } from \"../../store/actions/searchAction\";\nimport { listStoresByUser } from \"../../store/actions/storeActions\";\nimport { getProfileDetails } from \"../../store/actions/userActions\";\nimport { PROFILE_DETAILS_RESET } from \"../../store/constants/userConstants\";\nimport ProductCard from \"../../components/ProductCard\";\nimport \"./index.css\";\nimport Loader from \"../../components/Loader\";\n\nfunction Seller() {\n  const [value, setValue] = useState(\"\");\n  const [store, setStore] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const params = useParams();\n\n  const { stores, loading: storesLoading } = useSelector(\n    (state) => state.storesByUser\n  );\n  const { products } = useSelector((state) => state.productsByUser);\n  const { profile, loading: profileLoading } = useSelector(\n    (state) => state.profileDetails\n  );\n\n  useEffect(() => {\n    dispatch({ type: PROFILE_DETAILS_RESET });\n    dispatch(getProfileDetails(params.id));\n    dispatch(listStoresByUser(params.id));\n    dispatch(listProductsByUser(params.id));\n  }, [dispatch, params.id]);\n\n  useEffect(() => {\n    if (store !== \"\" && value === \"\") {\n      dispatch(\n        search({\n          type: \"products_in_store\",\n          store: store.id,\n          searchString: \"\",\n        })\n      );\n    }\n    if (store !== \"\" && value !== \"\") {\n      dispatch(\n        search({\n          type: \"products_in_store\",\n          store: store.id,\n          searchString: value,\n        })\n      );\n    }\n  }, [dispatch, store, value]);\n\n  const storeSearchHandler = (e) => {\n    setValue(e.target.value);\n    if (store === \"\") {\n      dispatch(\n        search({\n          type: \"products_by_seller\",\n          seller_id: profile.id,\n          searchString: e.target.value,\n        })\n      );\n    }\n  };\n\n  const placeholder =\n    `Search by brand or product name` + (store ? ` in ${store.name}` : \"\");\n\n  return (\n    <>\n      <Row\n        style={{\n          backgroundColor: \"#495b7a\",\n          height: \"3rem\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Col sm={12} lg={5}>\n          <Form\n            className=\"d-flex justify-content-center my-2\"\n            style={{ height: \"2rem\" }}\n          >\n            <Form.Control\n              placeholder={placeholder}\n              aria-label=\"Search\"\n              value={value}\n              onChange={(e) => storeSearchHandler(e)}\n            />\n          </Form>\n        </Col>\n      </Row>\n      {storesLoading || profileLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Row\n            className=\"mt-3 align-items-center pb-2\"\n            style={{ borderBottom: \"solid 1px lightgrey\" }}\n          >\n            <Col className=\"text-center justify-content-center\" md={2}>\n              <Image\n                src={profile.image}\n                style={{ width: \"auto\", maxWidth: \"15rem\", maxHeight: \"5rem\" }}\n              />\n            </Col>\n            <Col md={9}>\n              <ListGroup variant=\"flush\" style={{ fontSize: \"0.8rem\" }}>\n                <ListGroup.Item>\n                  <strong>Industry: </strong>\n                  {profile.industry}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <strong>Headquarter: </strong>\n                  {profile.headquarter}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <strong>Description: </strong>\n                  {profile.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n          <Row className=\"mt-3 px-2\">\n            <Col md={2} className=\"seller-sidebar\">\n              <strong>\n                <p style={{ textAlign: \"center\", fontSize: \"0.9rem\" }}>\n                  {store === \"\"\n                    ? \"Filter products by store\"\n                    : `You can search in store`}\n                </p>\n              </strong>\n\n              {stores &&\n                stores.map((sellerStore) => {\n                  return (\n                    <Row style={{ justifyContent: \"center\" }}>\n                      <Button\n                        onClick={() => setStore(sellerStore)}\n                        className=\"seller-store-button\"\n                      >\n                        {sellerStore.name}\n                      </Button>\n                    </Row>\n                  );\n                })}\n              {store !== \"\" && (\n                <Row style={{ justifyContent: \"center\" }}>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => (\n                      setStore(\"\"), dispatch(listProductsByUser(params.id))\n                    )}\n                    className=\"m-2\"\n                    style={{ width: \"5rem\", backgroundColor: \"white\" }}\n                  >\n                    Back\n                  </Button>\n                </Row>\n              )}\n            </Col>\n            <Col className=\"mx-1\">\n              <Row\n                style={{ textAlign: \"center\" }}\n                className=\"product-card-container\"\n              >\n                {products &&\n                  products.length === 0 &&\n                  (value !== \"\" ? (\n                    store !== \"\" ? (\n                      <h5>No search results in {store.name} store!</h5>\n                    ) : (\n                      <h5>No search results in stocks!</h5>\n                    )\n                  ) : (\n                    <h5>Currently no product to show!</h5>\n                  ))}\n                <Row className=\"product-card-row\">\n                  {products &&\n                    products.map((product, index) => {\n                      return <ProductCard product={product} key={index} />;\n                    })}\n                </Row>\n              </Row>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Seller;\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/AddProduct/index.js",["422"],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/AddStore/index.js",["423","424","425"],[],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\nimport { listProductCategories } from \"../../store/actions/categoriesActions\";\nimport { myDetails } from \"../../store/actions/userActions\";\nimport { createStore } from \"../../store/actions/storeActions\";\nimport { STORE_CREATE_RESET } from \"../../store/constants/storeConstants\";\nimport FormContainer from \"../../components/FormContainer\";\nimport AddressInputField from \"../../components/AddressInputField\";\nimport Loader from \"../../components/Loader\";\nimport Notification from \"../../components/Notification\";\nimport Message from \"../../components/Message\";\n\nfunction AddStore() {\n  const [viewState, setViewState] = useState({\n    latitude: 46.738436,\n    longitude: 8.082641,\n    zoom: 7,\n  });\n\n  const [state, setState] = useState({\n    owner: \"\",\n    name: \"\",\n    address: \"\",\n    country: \"\",\n    city: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    description: \"\",\n    phone: \"\",\n    image: \"\",\n    category: [],\n  });\n\n  const [name, setName] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { categories } = useSelector((state) => state.productCategories);\n  const { user } = useSelector((state) => state.myDetails);\n  const {\n    loading: createStoreLoading,\n    success: createStoreSuccess,\n    error: createStoreError,\n  } = useSelector((state) => state.createStore);\n\n  useEffect(() => {\n    if (createStoreSuccess) {\n      navigate(\"/mystores\", { state: { createStoreSuccess: true } });\n      dispatch({ type: STORE_CREATE_RESET });\n    }\n    if (createStoreError) {\n    }\n    dispatch(listProductCategories());\n    dispatch(myDetails());\n  }, [dispatch, navigate, createStoreSuccess]);\n\n  const onChange = ({ target: { name, value } }) => {\n    setState({ ...state, [name]: value });\n  };\n\n  const handleCategoryChange = (e) => {\n    var options = e.target.options;\n    var category = [];\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        category.push(options[i].value);\n      }\n    }\n    setState({ ...state, category: category });\n  };\n\n  const handleImageChange = (e) => {\n    const image = e.target.files[0];\n    setState({ ...state, image: image });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let formData = new FormData();\n\n    for (var i = 0; i < state.category.length; i++) {\n      formData.append(\"category\", state.category[i]);\n    }\n\n    formData.set(\"owner\", user.id);\n    formData.set(\"name\", name);\n    formData.set(\"address\", state.address);\n    formData.set(\"country\", state.country);\n    formData.set(\"city\", state.city);\n    formData.set(\"latitude\", state.latitude);\n    formData.set(\"longitude\", state.longitude);\n    formData.set(\"description\", state.description);\n    formData.set(\"phone\", state.phone);\n    formData.set(\"image\", state.image);\n\n    dispatch(createStore(formData));\n  };\n\n  return (\n    <>\n      <FormContainer>\n        <Row style={{ justifyContent: \"center\" }}>\n          <Col>\n            <h4 className=\"my-3\" style={{ textAlign: \"center\" }}>\n              ADD A STORE\n            </h4>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group className=\"mb-2\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </Form.Group>\n\n              <AddressInputField setState={setState} />\n\n              {state.latitude && (\n                <Row>\n                  <Col style={{ width: \"30%\" }}>\n                    <Form.Group className=\"mb-2\">\n                      <Form.Label>Latitude</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"text\"\n                        name=\"latitude\"\n                        value={state.latitude}\n                        onChange={onChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col style={{ width: \"30%\" }}>\n                    <Form.Group className=\"mb-2\">\n                      <Form.Label>Longitude</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"text\"\n                        name=\"longitude\"\n                        value={state.longitude}\n                        onChange={onChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n              )}\n              <Form.Group className=\"mb-2\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"description\"\n                  value={state.description}\n                  onChange={onChange}\n                  rows=\"3\"\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-2\">\n                <Form.Label>Phone</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"phone\"\n                  value={state.phone}\n                  onChange={onChange}\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-2\">\n                <Form.Label>Image</Form.Label>\n                <div>\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleImageChange}\n                  />\n                </div>\n              </Form.Group>\n              <Form.Group className=\"mb-2\">\n                <Form.Label>Categories</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  type=\"text\"\n                  name=\"category\"\n                  value={state.category}\n                  onChange={handleCategoryChange}\n                  multiple\n                >\n                  {categories &&\n                    categories.map((category) => {\n                      return <option key={category.id}>{category.name}</option>;\n                    })}\n                </Form.Control>\n              </Form.Group>\n              <Row style={{ justifyContent: \"center\" }}>\n                <Button type=\"submit\" variant=\"primary\">\n                  Submit\n                </Button>\n              </Row>\n            </Form>\n          </Col>\n        </Row>\n      </FormContainer>\n      {createStoreLoading && <Loader />}\n      {createStoreSuccess && (\n        <Notification\n          status=\"success\"\n          title=\"Success\"\n          message=\"Store Created!\"\n        />\n      )}\n      {createStoreError && (\n        <Message variant=\"danger\">{createStoreError}</Message>\n      )}\n    </>\n  );\n}\n\nexport default AddStore;\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Map/index.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Product/index.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Sellers/index.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/PlaceOrder/index.js",["426"],[],"import React, { useEffect } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Card,\n  Container,\n} from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../../components/Message\";\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\nimport { createOrder } from \"../../store/actions/orderActions\";\nimport { ORDER_CREATE_RESET } from \"../../store/constants/orderConstants\";\nimport isNumberDecimal from \"../../utils/isNumberDecimal\";\n\nfunction PlaceOrder() {\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, error, success } = orderCreate;\n\n  const { cartItems } = useSelector((state) => state.cart);\n  const { user } = useSelector((state) => state.myDetails);\n\n  const hasOnlinePurchase = cartItems.find(\n    (item) => item.orderType === \"online\"\n  );\n  const hasInStorePickup = cartItems.find(\n    (item) => item.orderType === \"inStore\"\n  );\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const cart = useSelector((state) => state.cart);\n\n  cart.itemsPrice = cart.cartItems.reduce(\n    (acc, item) => acc + item.price * item.quantity,\n    0\n  );\n\n  const totalItems = cart.cartItems.reduce(\n    (acc, item) => acc + item.quantity,\n    0\n  );\n\n  let shippingCost;\n  let totalShippingPrice = 0;\n  let subTotalPrice;\n\n  useEffect(() => {\n    if (!cart.paymentMethod) {\n      navigate(\"/payment\");\n    }\n    if (success) {\n      navigate(`/customer-order/${order.id}`);\n      dispatch({ type: ORDER_CREATE_RESET });\n    }\n  }, [dispatch, cart, success, order, navigate]);\n\n  const placeOrder = () => {\n    if (user) {\n      dispatch(\n        createOrder({\n          orderItems: cart.cartItems,\n          paymentMethod: cart.paymentMethod,\n          totalShippingPrice: totalShippingPrice,\n          totalPrice: cart.itemsPrice,\n          shippingAddress: cart.shippingAddress,\n        })\n      );\n    }\n  };\n\n  // Remove duplicates and get unique seller name(s)\n  let sellers = cartItems\n    .reduce((accumulator, current) => {\n      if (!accumulator.find((item) => item.seller === current.seller)) {\n        accumulator.push(current);\n      }\n      return accumulator;\n    }, [])\n    .map((item) => item.seller)\n    .sort();\n\n  // Remove duplicates and get unique location(s)\n  let pickUpLocations = cartItems\n    .filter((item) => item.orderType === \"inStore\")\n    .reduce((accumulator, current) => {\n      if (\n        !accumulator.find(\n          (item) =>\n            item.seller === current.seller &&\n            item.storeName == current.storeName\n        )\n      ) {\n        accumulator.push(current);\n      }\n      return accumulator;\n    }, [])\n    .sort((a, b) => (a.seller > b.seller ? 1 : b.seller > a.seller ? -1 : 0));\n\n  // Show total price by seller(s) order(s)\n  let totalPriceBySeller = sellers.map((seller) => {\n    return cart.cartItems\n      .filter((product) => product.seller === seller)\n      .reduce((acc, item) => acc + item.price * item.quantity, 0);\n  });\n\n  return (\n    <Container fluid className=\"placeorder-page-container\">\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            {hasOnlinePurchase && (\n              <ListGroup.Item>\n                <h2>Shipping Address</h2>\n                <p>\n                  {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\n                  {cart.shippingAddress.postalCode},{\" \"}\n                  {cart.shippingAddress.country}\n                </p>\n              </ListGroup.Item>\n            )}\n            {hasInStorePickup && (\n              <ListGroup.Item>\n                <h2>Pickup Location(s)</h2>\n                {pickUpLocations.map((location) => {\n                  return (\n                    <p>\n                      <span style={{ color: \"#698bc2\" }}>\n                        {location.seller} - {location.storeName}:{\" \"}\n                      </span>\n                      {cartItems\n                        .filter((item) => item.storeId === location.storeId)\n                        .reduce((acc, item) => acc + item.quantity, 0)}{\" \"}\n                      product(s)\n                    </p>\n                  );\n                })}\n              </ListGroup.Item>\n            )}\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {cart.paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message variant=\"info\">Your cart is empty</Message>\n              ) : (\n                sellers.map((seller, index) => {\n                  return (\n                    <Card>\n                      <Card.Title\n                        className=\"text-center pt-3\"\n                        style={{ color: \"#698bc2\" }}\n                      >\n                        {seller}\n                      </Card.Title>\n                      <ListGroup variant=\"flush\" key={index}>\n                        {cart.cartItems\n                          .filter((cartItem) => cartItem.seller === seller)\n                          .map((product) => {\n                            shippingCost =\n                              totalPriceBySeller[index] >= 100 ? 0 : 20;\n                            subTotalPrice =\n                              totalPriceBySeller[index] + shippingCost;\n                            totalShippingPrice += shippingCost;\n                            return (\n                              <>\n                                <ListGroup.Item key={product.id}>\n                                  <Row>\n                                    <Col md={1}>\n                                      <Image\n                                        src={product.image}\n                                        alt={product.name}\n                                        fluid\n                                        rounded\n                                      />\n                                    </Col>\n                                    <Col md={3}>\n                                      <Link to={`/product/${product.id}`}>\n                                        {product.name}\n                                      </Link>\n                                    </Col>\n\n                                    <Col md={2}>\n                                      {product.quantity} x CHF{\" \"}\n                                      {isNumberDecimal(Number(product.price))}\n                                    </Col>\n\n                                    <Col md={3}>\n                                      <p\n                                        style={{\n                                          textAlign: \"center\",\n                                        }}\n                                      >\n                                        {product.orderType === \"inStore\"\n                                          ? product.storeName\n                                          : \"Online\"}\n                                      </p>\n                                    </Col>\n                                  </Row>\n                                  <Row className=\"justify-content-end\">\n                                    <h6\n                                      style={{\n                                        textAlign: \"center\",\n                                        width: \"auto\",\n                                        margin: \"0.5rem\",\n                                        color: \"#698bc2\",\n                                      }}\n                                    >\n                                      {product.orderType === \"online\"\n                                        ? shippingCost === 0\n                                          ? \"Free Shipping\"\n                                          : \"Shipping: CHF 20.-\"\n                                        : \"Pick up in store\"}\n                                    </h6>\n                                  </Row>\n                                </ListGroup.Item>\n                              </>\n                            );\n                          })}\n                        <Row className=\"justify-content-end\">\n                          <h6\n                            style={{\n                              width: \"auto\",\n                              margin: \"0.5rem\",\n                            }}\n                          >\n                            Subtotal: CHF {isNumberDecimal(subTotalPrice)}\n                          </h6>\n                        </Row>\n                      </ListGroup>\n                    </Card>\n                  );\n                })\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Seller(s):</Col>\n                  <Col>{sellers.length}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Item(s):</Col>\n                  <Col>{totalItems}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              {hasOnlinePurchase && (\n                <>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>CHF {isNumberDecimal(cart.itemsPrice)}</Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Shipping:</Col>\n                      <Col>\n                        {totalShippingPrice === 0\n                          ? \"Free\"\n                          : \"CHF \" + totalShippingPrice + \".-\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                </>\n              )}\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total Price:</Col>\n                  <Col>\n                    CHF {isNumberDecimal(cart.itemsPrice + totalShippingPrice)}\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n                {!user && (\n                  <Message variant=\"danger\">Please log in to continue.</Message>\n                )}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row className=\"justify-content-center\">\n                  <Button\n                    type=\"button\"\n                    className=\"blue-button\"\n                    disabled={cart.cartItems === 0 || !user}\n                    onClick={placeOrder}\n                  >\n                    Place Order\n                  </Button>\n                </Row>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default PlaceOrder;\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Payment/index.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Cart/index.js",["427","428"],[],"import React, { useEffect } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n  Container,\n} from \"react-bootstrap\";\nimport Message from \"../../components/Message\";\nimport {\n  addToCart,\n  emptyCart,\n  removeFromCart,\n} from \"../../store/actions/cartActions\";\nimport { listUsers } from \"../../store/actions/userActions\";\nimport isNumberDecimal from \"../../utils/isNumberDecimal\";\n\nfunction Cart() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const { userInfo } = useSelector((state) => state.userLogin);\n  const { cartItems } = useSelector((state) => state.cart);\n  const { users } = useSelector((state) => state.userList);\n\n  let shippingCost;\n  let totalShippingCost = 0;\n  let subTotalPrice;\n\n  useEffect(() => {\n    if (users?.length === 0) {\n      dispatch(listUsers());\n    }\n  }, [dispatch]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const hasOnlinePurchase = cartItems.find(\n    (item) => item.orderType === \"online\"\n  );\n\n  const totalPrice = cartItems\n    .reduce((acc, product) => acc + product.quantity * product.price, 0)\n    .toFixed(2);\n\n  const checkoutHandler = () => {\n    if (!userInfo) {\n      navigate(\"/login\");\n    }\n    if (hasOnlinePurchase) {\n      navigate(\"/shipping\");\n    } else {\n      navigate(\"/payment\");\n    }\n  };\n\n  // Get unique seller names\n  let sellers = cartItems\n    .reduce((accumulator, current) => {\n      if (!accumulator.find((item) => item.seller === current.seller)) {\n        accumulator.push(current);\n      }\n      return accumulator;\n    }, [])\n    .map((product) => product.seller);\n\n  // Show total price of products by seller\n  let totalPriceBySeller = sellers.map((seller) => {\n    return cartItems\n      .filter((product) => product.seller === seller)\n      .reduce((acc, item) => acc + item.price * item.quantity, 0);\n  });\n\n  return (\n    <Container fluid className=\"card-page-container\">\n      <Row className=\"m-3\">\n        <Col md={8}>\n          <Row>\n            <Col md={10}>\n              <h1>Shopping Cart</h1>\n            </Col>\n            {cartItems.length > 1 && (\n              <Col md={2} className=\"my-auto\">\n                <Button\n                  style={{ width: \"auto\" }}\n                  type=\"button\"\n                  variant=\"light\"\n                  onClick={() => dispatch(emptyCart())}\n                >\n                  <i className=\"fas fa-trash\"></i>\n                </Button>\n              </Col>\n            )}\n          </Row>\n          {cartItems.length === 0 ? (\n            <Message variant=\"info\">\n              Your cart is empty <Link to=\"/\">Go Back</Link>\n            </Message>\n          ) : (\n            sellers.map((seller, index) => {\n              const sellerId = cartItems.find(\n                (item) => item.seller === seller\n              ).sellerId\n              return (\n                <Card style={{ marginBlockStart: \"1rem\" }}>\n                  <Card.Title\n                    className=\"text-center pt-3\"\n                    style={{ color: \"#698bc2\" }}\n                  >\n                    <Link to={`/seller/${sellerId}`}>{seller}</Link>\n                  </Card.Title>\n                  <ListGroup variant=\"flush\" key={index}>\n                    {cartItems\n                      .filter((cartItem) => cartItem.seller === seller)\n                      .map((product) => {\n                        shippingCost =\n                          totalPriceBySeller[index] >= 100 ? 0 : 20;\n                        totalShippingCost += shippingCost;\n                        subTotalPrice =\n                          totalPriceBySeller[index] + shippingCost;\n                        return (\n                          <>\n                            <ListGroup.Item key={product.id}>\n                              <Row>\n                                <Col md={1}>\n                                  <Image\n                                    src={product.image}\n                                    alt={product.name}\n                                    fluid\n                                    rounded\n                                  />\n                                </Col>\n                                <Col md={3}>\n                                  <Link to={`/product/${product.id}`}>\n                                    {product.name}\n                                  </Link>\n                                </Col>\n\n                                <Col md={3}>\n                                  CHF {isNumberDecimal(Number(product.price))}\n                                </Col>\n\n                                <Col md={4}>\n                                  <>\n                                    <p>\n                                      {product.orderType === \"inStore\"\n                                        ? product.storeName\n                                        : \"Online\"}\n                                    </p>\n                                    <Form.Control\n                                      as=\"select\"\n                                      value={product.quantity}\n                                      style={{ width: \"auto\" }}\n                                      onChange={(e) =>\n                                        dispatch(\n                                          addToCart(\n                                            product.id,\n                                            Number(e.target.value),\n                                            product.orderType,\n                                            product.productStock,\n                                            product.stockId,\n                                            product.storeName,\n                                            product.storeId\n                                          )\n                                        )\n                                      }\n                                    >\n                                      {[\n                                        ...Array(product.productStock).keys(),\n                                      ].map((x) => (\n                                        <option key={x + 1} value={x + 1}>\n                                          {x + 1}\n                                        </option>\n                                      ))}\n                                    </Form.Control>\n                                  </>\n                                </Col>\n                                <Col md={1}>\n                                  <Button\n                                    style={{ width: \"auto\" }}\n                                    type=\"button\"\n                                    variant=\"light\"\n                                    onClick={() =>\n                                      removeFromCartHandler(product.id)\n                                    }\n                                  >\n                                    <i className=\"fas fa-trash\"></i>\n                                  </Button>\n                                </Col>\n                              </Row>\n                              <Row className=\"justify-content-end\">\n                                <h6\n                                  style={{\n                                    textAlign: \"center\",\n                                    width: \"auto\",\n                                    margin: \"0.5rem\",\n                                    color: \"#698bc2\",\n                                  }}\n                                >\n                                  {product.orderType === \"online\"\n                                    ? shippingCost === 0\n                                      ? \"Free Shipping\"\n                                      : \"Shipping: CHF 20.-\"\n                                    : \"Pick up in-store\"}\n                                </h6>\n                              </Row>\n                            </ListGroup.Item>\n                          </>\n                        );\n                      })}\n                    <ListGroup.Item>\n                      <Row className=\"justify-content-end\">\n                        <h6\n                          style={{\n                            textAlign: \"center\",\n                            width: \"auto\",\n                            margin: \"0.5rem\",\n                          }}\n                        >\n                          Subtotal: CHF {isNumberDecimal(subTotalPrice)}\n                        </h6>\n                      </Row>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card>\n              );\n            })\n          )}\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              {hasOnlinePurchase && (\n                <ListGroup.Item>\n                  <p style={{ textAlign: \"center\", margin: \"0\" }}>\n                    Free shipping on orders over CHF 100.-\n                  </p>\n                </ListGroup.Item>\n              )}\n              <ListGroup.Item>\n                <h2>\n                  Total Price (\n                  {cartItems.reduce(\n                    (acc, product) => acc + product.quantity,\n                    0\n                  )}\n                  ) items\n                </h2>\n                CHF {isNumberDecimal(Number(totalPrice) + totalShippingCost)}\n              </ListGroup.Item>\n            </ListGroup>\n            <ListGroup.Item>\n              <Row className=\"justify-content-center\">\n                <Button\n                  type=\"button\"\n                  className=\"blue-button mb-2\"\n                  disabled={cartItems.length === 0}\n                  onClick={checkoutHandler}\n                >\n                  Proceed To Checkout\n                </Button>\n              </Row>\n            </ListGroup.Item>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Cart;\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/CustomerOrders/index.js",["429","430"],[],"import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, Table, Container } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { listMyOrders } from \"../../store/actions/orderActions\";\n\nfunction CustomerOrders() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders,\n  } = useSelector((state) => state.purchaseMyList);\n\n  useEffect(() => {\n    dispatch(listMyOrders());\n  }, [dispatch, navigate]);\n\n  return (\n    <Container fluid>\n      <Col>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : orders.length === 0 ? (\n          <h2 className=\"text-center\">You have no orders.</h2>\n        ) : (\n          <Table striped responsive className=\"table-sm\">\n            <thead style={{ backgroundColor: \"#f2f5fa\" }}>\n              <tr style={{ textAlign: \"center\" }}>\n                <th>ID</th>\n                <th>Date</th>\n                <th>Total</th>\n                <th>Paid</th>\n                <th>Payment Method</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order.id} style={{ textAlign: \"center\" }}>\n                  <td>{order.id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>CHF {order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>{order.paymentMethod}</td>\n                  <td>\n                    <LinkContainer to={`/customer-order/${order.id}`}>\n                      <Button className=\"btn-sm\">Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Container>\n  );\n}\n\nexport default CustomerOrders;\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/CustomerOrder/index.js",["431","432"],[],"import React, { useState, useEffect } from \"react\";\nimport { Row, Col, ListGroup, Card, Container } from \"react-bootstrap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport Message from \"../../components/Message\";\nimport Loader from \"../../components/Loader\";\nimport {\n  ORDER_PAY_RESET,\n  ORDER_SEND_RESET,\n} from \"../../store/constants/orderConstants\";\nimport OrderItemCard from \"./OrderItemCard\";\nimport isNumberDecimal from \"../../utils/isNumberDecimal\";\nimport { getOrderDetails, payOrder } from \"../../store/actions/orderActions\";\n\nfunction CustomerOrder() {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const navigate = useNavigate;\n\n  const orderId = params.id;\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, error, loading } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const sellerOrderSend = useSelector((state) => state.sellerOrderSend);\n  const { loading: loadingSellerOrderSend, success: successSellerOrderSend } =\n    sellerOrderSend;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const hasOnlineOrderItem = order?.sellerOrder.find((sellerOrder) => {\n    return sellerOrder.onlineOrderItems.length > 0;\n  });\n\n  const hasInStorePickup = order?.sellerOrder\n    .map((sellerOrder) => {\n      return sellerOrder.inStoreOrderItems.reduce((accumulator, current) => {\n        if (\n          !accumulator.find(\n            (item) =>\n              item.store.owner_name === current.store.owner_name &&\n              item.store.name == current.store.name\n          )\n        ) {\n          accumulator.push(current);\n        }\n        return accumulator;\n      }, []);\n    })\n    .flat()\n    .sort((a, b) =>\n      a.store.owner_name > b.store.owner_name\n        ? 1\n        : b.store.owner_name > a.store.owner_name\n        ? -1\n        : 0\n    );\n\n  let totalInStoreOrderItems;\n  let totalOnlineOrderItems;\n  let totalItem;\n\n  if (!loading && !error && order) {\n    totalInStoreOrderItems = order.sellerOrder.reduce(\n      (acc, sellerOrder) =>\n        acc +\n        sellerOrder.inStoreOrderItems.reduce(\n          (acc, item) => acc + item.quantity,\n          0\n        ),\n      0\n    );\n    totalOnlineOrderItems = order.sellerOrder.reduce(\n      (acc, sellerOrder) =>\n        acc +\n        sellerOrder.onlineOrderItems.reduce(\n          (acc, item) => acc + item.quantity,\n          0\n        ),\n      0\n    );\n    totalItem = totalInStoreOrderItems + totalOnlineOrderItems;\n  }\n\n  const addPayPalScript = () => {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = `https://www.paypal.com/sdk/js?client-id=${process.env.REACT_APP_PAYPAL_ID}`;\n    script.async = true;\n    script.onload = () => {\n      setSdkReady(true);\n    };\n    document.body.appendChild(script);\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      navigate(\"/login\");\n    }\n    if (\n      !order ||\n      successPay ||\n      order.id !== Number(orderId) ||\n      successSellerOrderSend\n    ) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_SEND_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal && process.env.PAYPAL_CLIENT_ID) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [\n    dispatch,\n    userInfo,\n    order,\n    orderId,\n    successPay,\n    successSellerOrderSend,\n    navigate,\n  ]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  return (\n    <Container fluid className=\"order-page-container\">\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        order && (\n          <>\n            <Row>\n              <strong>\n                <p className=\"text-center my-3 main-order-id\">\n                  CUSTOMER ORDER # {order.id}\n                </p>\n              </strong>\n            </Row>\n            <Row>\n              <Col lg={8}>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <h2>Customer</h2>\n                    <p>\n                      <strong>Name: </strong> {order.customer.name}\n                    </p>\n                    <p>\n                      <strong>Email: </strong>\n                      <a href={`mailto:${order.customer.email}`}>\n                        {order.customer.email}\n                      </a>\n                    </p>\n                    {hasOnlineOrderItem && (\n                      <>\n                        <h2>Shipping</h2>\n                        <p>\n                          <strong>Address: </strong>\n                          {order.shippingAddress.address},{\" \"}\n                          {order.shippingAddress.city},{\"  \"}\n                          {order.shippingAddress.postalCode},{\"  \"}\n                          {order.shippingAddress.country}\n                        </p>\n                      </>\n                    )}\n                  </ListGroup.Item>\n\n                  {hasInStorePickup.length > 0 && (\n                    <ListGroup.Item>\n                      <h2>Pickup Location(s)</h2>\n                      {hasInStorePickup.map((item) => {\n                        return (\n                          <p>\n                            {item.store.owner_name} - {item.store.name}\n                          </p>\n                        );\n                      })}\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <h2>Payment Method</h2>\n                    <p>\n                      <strong>Method: </strong>\n                      {order.paymentMethod}\n                    </p>\n                    <Col md={3} className=\"text-center\">\n                      {order.isPaid ? (\n                        <Message variant=\"success\">\n                          Paid on {order.paidAt.substring(0, 10)}\n                        </Message>\n                      ) : (\n                        <Message variant=\"warning\">Not Paid</Message>\n                      )}\n                    </Col>\n                  </ListGroup.Item>\n                  {order.sellerOrder.length === 0 ? (\n                    <Message variant=\"info\">Store Order is empty</Message>\n                  ) : (\n                    <ListGroup.Item>\n                      {order.sellerOrder.map((sellerOrder, index) => {\n                        return (\n                          <Card style={{ marginBlockStart: \"1rem\" }}>\n                            <Card.Body>\n                              <Row className=\"text-end\">\n                                <h6>Seller Order # {sellerOrder.id}</h6>\n                              </Row>\n                              <Row\n                                className=\"text-center\"\n                                style={{ color: \"#698bc2\" }}\n                              >\n                                <h5>{sellerOrder.seller.username}</h5>\n                              </Row>\n                            </Card.Body>\n                            {sellerOrder.inStoreOrderItems.length > 0 && (\n                              <>\n                                <Row className=\"text-center\">\n                                  <h6>In-Store Pick Up Item(s)</h6>\n                                </Row>\n                                <Card\n                                  style={{\n                                    margin: \"0.2rem\",\n                                    marginBottom: \"1rem\",\n                                  }}\n                                >\n                                  {sellerOrder.inStoreOrderItems.map(\n                                    (orderItem) => {\n                                      return (\n                                        <>\n                                          <OrderItemCard\n                                            orderItem={orderItem}\n                                            sellerOrder={sellerOrder}\n                                          />\n                                        </>\n                                      );\n                                    }\n                                  )}\n                                </Card>\n                              </>\n                            )}\n                            {sellerOrder.onlineOrderItems.length > 0 && (\n                              <>\n                                <Row className=\"text-center\">\n                                  <h6>Shipping Item(s)</h6>\n                                </Row>\n                                <Card\n                                  style={{\n                                    margin: \"0.2rem\",\n                                    marginBottom: \"1rem\",\n                                  }}\n                                >\n                                  {sellerOrder.onlineOrderItems.map(\n                                    (orderItem) => {\n                                      return (\n                                        <>\n                                          <OrderItemCard\n                                            orderItem={orderItem}\n                                            sellerOrder={sellerOrder}\n                                          />\n                                        </>\n                                      );\n                                    }\n                                  )}\n                                  <Row\n                                    lg={4}\n                                    className=\"text-center justify-content-center\"\n                                    style={{ marginTop: \"0.5rem\" }}\n                                  >\n                                    {sellerOrder.isShipped ? (\n                                      <Message variant=\"success\">\n                                        Shipped on{\" \"}\n                                        {sellerOrder.shippedAt.substring(0, 10)}\n                                      </Message>\n                                    ) : (\n                                      <Message variant=\"warning\">\n                                        Not Shipped\n                                      </Message>\n                                    )}\n                                  </Row>\n                                </Card>\n                              </>\n                            )}\n                            <Row className=\"justify-content-end\">\n                              <h6\n                                style={{\n                                  textAlign: \"center\",\n                                  width: \"auto\",\n                                  margin: \"0.5rem\",\n                                }}\n                              >\n                                Subtotal: CHF{\" \"}\n                                {isNumberDecimal(\n                                  Number(sellerOrder.totalPrice)\n                                )}\n                              </h6>\n                            </Row>\n                          </Card>\n                        );\n                      })}\n                    </ListGroup.Item>\n                  )}\n                </ListGroup>\n              </Col>\n\n              <Col lg={4}>\n                <Card>\n                  <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                      <h2>Order Summary</h2>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Seller(s):</Col>\n                        <Col>{order.sellerOrder.length}</Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Item(s):</Col>\n                        <Col>{totalItem}</Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Total Price:</Col>\n                        <Col>\n                          CHF{\" \"}\n                          {isNumberDecimal(\n                            Number(order.totalPrice) +\n                              Number(order.totalShippingPrice)\n                          )}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Date:</Col>\n                        <Col>\n                          {order.createdAt.substring(0, 10)}{\" \"}\n                          {order.createdAt.substring(11, 16)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    {!order.isPaid && (\n                      <ListGroup.Item>\n                        {loadingPay && <Loader />}\n                        {!sdkReady ? (\n                          <Loader />\n                        ) : (\n                          <PayPalScriptProvider\n                            options={{\n                              \"client-id\": process.env.REACT_APP_PAYPAL_ID,\n                            }}\n                          >\n                            <PayPalButtons\n                              createOrder={(data, actions) => {\n                                return actions.order.create({\n                                  purchase_units: [\n                                    {\n                                      amount: {\n                                        value: order.totalPrice,\n                                      },\n                                    },\n                                  ],\n                                });\n                              }}\n                              onApprove={(data, actions) => {\n                                return actions.order\n                                  .capture()\n                                  .then(successPaymentHandler());\n                              }}\n                            />\n                          </PayPalScriptProvider>\n                        )}\n                      </ListGroup.Item>\n                    )}\n                  </ListGroup>\n                </Card>\n              </Col>\n            </Row>\n          </>\n        )\n      )}\n    </Container>\n  );\n}\n\nexport default CustomerOrder;\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/SellerOrder/index.js",["433","434","435","436"],[],"import React, { useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Card, Container } from \"react-bootstrap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../../components/Message\";\nimport Loader from \"../../components/Loader\";\nimport {\n  getSellerOrderDetails,\n  sendSellerOrder,\n  retrieveSellerOrder,\n  completeSellerOrder,\n} from \"../../store/actions/orderActions\";\nimport {\n  SELLER_ORDER_COMPLETE_RESET,\n  SELLER_ORDER_RETRIEVE_RESET,\n  SELLER_ORDER_SEND_RESET,\n} from \"../../store/constants/orderConstants\";\nimport isNumberDecimal from \"../../utils/isNumberDecimal\";\nimport OrderItemCard from \"./OrderItemCard\";\n\nfunction SellerOrder() {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const navigate = useNavigate;\n\n  const sellerOrderId = params.id;\n\n  const {\n    sellerOrder,\n    error: errorSellerOrder,\n    loading: loadingSellerOrder,\n  } = useSelector((state) => state.sellerOrderDetails);\n\n  const sellerOrderSend = useSelector((state) => state.sellerOrderSend);\n  const { loading: loadingSellerOrderSend, success: successSellerOrderSend } =\n    sellerOrderSend;\n\n  const sellerItemRetrieve = useSelector((state) => state.sellerOrderRetrieve);\n  const {\n    loading: loadingSellerOrderRetrieve,\n    success: successSellerOrderRetrieve,\n  } = sellerItemRetrieve;\n\n  const sellerOrderComplete = useSelector((state) => state.sellerOrderComplete);\n  const {\n    loading: loadingSellerOrderComplete,\n    success: successSellerOrderComplete,\n  } = sellerOrderComplete;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const hasOnlinePurchase =\n    sellerOrder?.onlineOrderItems.length > 0 ? true : false;\n\n  const hasInStorePickup =\n    sellerOrder?.inStoreOrderItems.length > 0 ? true : false;\n\n  const hasItemNotShipped = hasOnlinePurchase && !sellerOrder?.isShipped;\n  const hasItemNotRetrieved =\n    hasInStorePickup &&\n    sellerOrder?.inStoreOrderItems.find((item) => item.isRetrieved === false)\n      ? true\n      : false;\n\n  let pickUpLocations = sellerOrder?.inStoreOrderItems\n    .reduce((accumulator, current) => {\n      if (\n        !accumulator.find(\n          (item) =>\n            item.details.seller === current.details.seller &&\n            item.store.name == current.store.name\n        )\n      ) {\n        accumulator.push(current);\n      }\n      return accumulator;\n    }, [])\n    .sort((a, b) => (a.seller > b.seller ? 1 : b.seller > a.seller ? -1 : 0));\n\n  let totalInStoreOrderItems;\n  let totalOnlineOrderItems;\n  let totalItems;\n\n  if (!loadingSellerOrder && !errorSellerOrder && sellerOrder) {\n    totalInStoreOrderItems = sellerOrder.inStoreOrderItems.reduce(\n      (acc, item) => acc + item.quantity,\n      0\n    );\n    totalOnlineOrderItems = sellerOrder.onlineOrderItems.reduce(\n      (acc, item) => acc + item.quantity,\n      0\n    );\n    totalItems = totalInStoreOrderItems + totalOnlineOrderItems;\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      navigate(\"/login\");\n    }\n    if (\n      !sellerOrder ||\n      sellerOrder.id !== Number(sellerOrderId) ||\n      successSellerOrderSend ||\n      successSellerOrderRetrieve\n    ) {\n      dispatch({ type: SELLER_ORDER_SEND_RESET });\n      dispatch({ type: SELLER_ORDER_RETRIEVE_RESET });\n      dispatch({ type: SELLER_ORDER_COMPLETE_RESET });\n      dispatch(getSellerOrderDetails(sellerOrderId));\n    }\n  }, [\n    dispatch,\n    navigate,\n    userInfo,\n    sellerOrder,\n    sellerOrderId,\n    successSellerOrderSend,\n    successSellerOrderRetrieve,\n  ]);\n\n  useEffect(() => {\n    if (\n      sellerOrder &&\n      !sellerOrder.isCompleted &&\n      sellerOrder.id === Number(sellerOrderId)\n    ) {\n      if (\n        (!hasItemNotShipped || !hasOnlinePurchase) &&\n        (!hasItemNotRetrieved || !hasInStorePickup)\n      ) {\n        dispatch(completeSellerOrder(sellerOrderId));\n        dispatch(getSellerOrderDetails(sellerOrderId));\n      }\n    }\n  }, [dispatch, hasItemNotShipped, hasItemNotRetrieved]);\n\n  useEffect(() => {\n    if (successSellerOrderComplete) {\n      dispatch({ type: SELLER_ORDER_COMPLETE_RESET });\n    }\n  }, [dispatch, successSellerOrderComplete]);\n\n  const shippingHandler = () => {\n    dispatch(sendSellerOrder(sellerOrder.id));\n  };\n\n  const pickUpHandler = (id) => {\n    dispatch(retrieveSellerOrder(id));\n  };\n\n  return (\n    <Container fluid className=\"order-page-container\">\n      {loadingSellerOrder || loadingSellerOrderSend ? (\n        <Loader />\n      ) : (\n        sellerOrder && (\n          <>\n            <Row>\n              <strong>\n                <p className=\"text-center my-3 main-order-id\">\n                  SELLER ORDER # {sellerOrder?.id}\n                </p>\n              </strong>\n            </Row>\n            <Row>\n              <Col md={8}>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <h2>Customer</h2>\n                    <p>\n                      <strong>Name: </strong> {sellerOrder.customer.username}\n                    </p>\n                    <p>\n                      <strong>Email: </strong>\n                      <a href={`mailto:${sellerOrder.customer.email}`}>\n                        {sellerOrder.customer.email}\n                      </a>\n                    </p>\n                    {hasOnlinePurchase && (\n                      <>\n                        <h2>Shipping</h2>\n                        <p>\n                          <strong>Address: </strong>\n                          {sellerOrder.shippingAddress.address},{\" \"}\n                          {sellerOrder.shippingAddress.city},{\"  \"}\n                          {sellerOrder.shippingAddress.postalCode},{\"  \"}\n                          {sellerOrder.shippingAddress.country}\n                        </p>\n                      </>\n                    )}\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Col md={3} className=\"text-center\">\n                      {sellerOrder.order.isPaid ? (\n                        <Message variant=\"success\">\n                          Paid on {sellerOrder.order.paidAt.substring(0, 10)}\n                        </Message>\n                      ) : (\n                        <Message variant=\"warning\">Not Paid</Message>\n                      )}\n                    </Col>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    {hasOnlinePurchase && (\n                      <Card style={{ marginBlockStart: \"1rem\" }}>\n                        <Row className=\"text-center mt-2\">\n                          <h6>Shipping Item(s)</h6>\n                        </Row>\n                        {sellerOrder.onlineOrderItems.map((item, index) => {\n                          return (\n                            <OrderItemCard\n                              item={item}\n                              isNumberDecimal={isNumberDecimal}\n                              key={index}\n                            />\n                          );\n                        })}\n                        <Row className=\"justify-content-center\">\n                          <Col md={4} className=\"text-center mt-2\">\n                            {sellerOrder.isShipped ? (\n                              <Message variant=\"success\">\n                                Sent on{\" \"}\n                                {sellerOrder.shippedAt.substring(0, 10) +\n                                  \" at \" +\n                                  sellerOrder.shippedAt.substring(11, 16)}\n                              </Message>\n                            ) : (\n                              <Button\n                                className=\"blue-button mb-2\"\n                                onClick={() => shippingHandler()}\n                                disabled={!sellerOrder.order.isPaid}\n                              >\n                                Mark As Sent\n                              </Button>\n                            )}\n                          </Col>\n                        </Row>\n                      </Card>\n                    )}\n\n                    {hasInStorePickup && (\n                      <Card style={{ marginBlockStart: \"1rem\" }}>\n                        <Row className=\"text-center mt-2\">\n                          <h6>In-Store Pick Up Item(s)</h6>\n                        </Row>\n\n                        {sellerOrder.inStoreOrderItems.map((item, index) => {\n                          return (\n                            <>\n                              <OrderItemCard\n                                item={item}\n                                pickUpHandler={pickUpHandler}\n                                sellerOrder={sellerOrder}\n                                key={index}\n                              />\n                            </>\n                          );\n                        })}\n                      </Card>\n                    )}\n                  </ListGroup.Item>\n                </ListGroup>\n              </Col>\n              <Col md={4}>\n                <Card>\n                  <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                      <h2>Order Summary</h2>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Item(s):</Col>\n                        <Col>{totalItems}</Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Total Price:</Col>\n                        <Col>\n                          CHF {isNumberDecimal(Number(sellerOrder.totalPrice))}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    {hasInStorePickup && (\n                      <ListGroup.Item>\n                        <h2>Pickup Location(s)</h2>\n                        {pickUpLocations.map((item) => {\n                          return <p>{item.store.name}</p>;\n                        })}\n                      </ListGroup.Item>\n                    )}\n\n                    <ListGroup.Item>\n                      <h2>Parent Order</h2>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>\n                          <p>Customer Order #</p>\n                        </Col>\n                        <Col>\n                          <p>{sellerOrder.order.id}</p>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>\n                          <p>Date:</p>\n                        </Col>\n                        <Col>\n                          <p>\n                            {sellerOrder.createdAt.substring(0, 10)}{\" \"}\n                            {sellerOrder.createdAt.substring(11, 16)}\n                          </p>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      {errorSellerOrder && (\n                        <Message variant=\"danger\">{errorSellerOrder}</Message>\n                      )}\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card>\n              </Col>\n            </Row>\n          </>\n        )\n      )}\n    </Container>\n  );\n}\n\nexport default SellerOrder;\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Shipping/index.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/userActions.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/SellerOrders/index.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/index.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/DeletePopup.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/SearchBox.js",["437"],[],"import React, { useEffect } from \"react\";\nimport { Row, Form, Col } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { search } from \"../store/actions/searchAction\";\nimport useDebounce from \"../utils/useDebounce\";\n\nfunction SearchBox({\n  searchProps,\n  value,\n  setValue,\n  placeholder,\n  actionType,\n}) {\n\n  const dispatch = useDispatch();\n  const debouncedSearchTerm = useDebounce(value, 500);\n\n  const { ...rest } = searchProps;\n  rest[\"searchString\"] = value;\n\n  useEffect(() => {\n    if (actionType) {\n      dispatch({ type: actionType });\n    }\n    if (debouncedSearchTerm) {\n      dispatch(search(rest));\n    }\n  }, [dispatch, debouncedSearchTerm, actionType]);\n\n  return (\n    <Row\n      style={{\n        backgroundColor: \"#495b7a\",\n        height: \"3rem\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Col xs={10} sm={6} lg={5}>\n        <Form\n          className=\"d-flex justify-content-center my-2\"\n          style={{ height: \"2rem\" }}\n        >\n          <Form.Control\n            type=\"text\"\n            placeholder={placeholder}\n            aria-label=\"Search\"\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n\nexport default SearchBox\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/Loader.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/storeActions.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/productActions.js",["438"],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/stockActions.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/EditProfileScreen.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/ProductCard.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/Notification.js",["439"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./Notification.css\";\n\nfunction Notification({ message, status }) {\n  const [style, setStyle] = useState(\"\");\n\n  useEffect(() => {\n    setTimeout(() => {\n      setStyle(\"transition\");\n    }, 1500);\n  }, []);\n\n  let statusClasses = \"\";\n\n  if (status === \"success\") {\n    statusClasses = \"success\";\n  }\n\n  if (status === \"error\") {\n    statusClasses = \"error\";\n  }\n\n  const cssClasses = `notification success ${style}`;\n\n  return (\n    <>\n      <div className={cssClasses}>\n        <h2>{message}</h2>\n      </div>\n    </>\n  );\n}\n\nexport default Notification;\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyProducts/AddProductButton.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Home/LatestSellers.js",["440"],[],"import React from \"react\";\nimport { Carousel, Col, Image, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default function LatestSellers({ latestSellers = [] }) {\n\n\n  return (\n    <Row className=\"text-center\">\n      <h5 className=\"text-center\">Latest Sellers</h5>\n      <Carousel className=\"sellers-carousel\" style={{ alignItems: \"center\" }}>\n        {latestSellers.map((seller, index) => {\n          return (\n            seller && (\n              <Carousel.Item key={index}>\n                <Link to={`/seller/${seller.id}`} style={{ color: \"#32415c\" }}>\n                  <Image\n                    src={seller.image}\n                    style={{\n                      width: \"auto\",\n                      height: 'auto',\n                      maxHeight: \"2.3rem\",\n                    }}\n                    alt=\"latest-sellers\"\n                  />\n                  {seller.description && (\n                    <Row style={{ overflow:'hidden', height:'7rem', marginBottom:'1.5rem' }}>\n\n                    <p style={{ marginTop: \"2rem\", fontSize: \"1rem\" }}>\n                      {seller.description}\n                    </p>\n                    </Row>\n                  )}\n                  <h6 style={{ color: \"#5b6da8\" }}>{seller.industry}</h6>\n                </Link>\n              </Carousel.Item>\n            )\n          );\n        })}\n      </Carousel>\n    </Row>\n  );\n}\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/categoriesActions.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyProducts/MyProductStocks.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyProducts/ProductButtons.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Home/HomeSidebar.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Home/ProductCarousel.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Home/HomeCategoriesBar.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/searchAction.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Home/LatestReviews.js",["441"],[],"import React from \"react\";\nimport { Carousel, Col, Image, Row } from \"react-bootstrap\";\nimport Rating from \"../../components/Rating\";\nimport { Link } from \"react-router-dom\";\n\nexport default function LatestReviews({ latestReviews = [] }) {\n\n  return (\n    <Row>\n      <h5 className=\"text-center\">Latest Reviews</h5>\n      <Carousel className=\"reviews-carousel\">\n        {latestReviews.map((review, index) => {\n          return (\n            review && (\n              <Carousel.Item key={index}>\n                <Row className=\"text-center\">\n                  <Rating value={review.rating} color={\"#f8e825\"} />\n                  <Link\n                    to={`/product/${review.product_id}`}\n                    style={{ color: \"#32415c\" }}\n                  >\n                    <Row className=\"d-flex justify-content-center\">\n                      <Image\n                        src={review.image}\n                        className=\"d-flex justify-content-center my-2\"\n                        style={{ width: \"auto\", height: \"8rem\" }}\n                        alt=\"latest-reviews\"\n                      />\n                    </Row>\n                    <h5 className=\" mb-3\" style={{ color: \"#5b6da8\" }}>\n                      {review.product_brand}\n                    </h5>\n                    <strong>\n                      <h6 className=\"mb-3\">{review.name}</h6>\n                    </strong>\n                    <Row style={{ overflow:'hidden', height:'3rem', marginBottom:'1.5rem' }}> \n                      <p>\n                        <i className=\"fas fa-quote-left pe-2\"></i>\n                        {review.comment}\n                      </p>\n                    </Row>\n                  </Link>\n                  <p>reviewed by {review.name}</p>\n                </Row>\n              </Carousel.Item>\n            )\n          );\n        })}\n      </Carousel>\n    </Row>\n  );\n}\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyStores/AddStoreButton.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyStores/StoreButtons.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/MyStores/StoreStocks.js",["442","443","444"],[],"import React, { useEffect, useState } from \"react\";\nimport { Col, Form, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { search } from \"../../store/actions/searchAction\";\nimport { listStoreStocks } from \"../../store/actions/storeActions\";\nimport { STORE_STOCKS_RESET } from \"../../store/constants/storeConstants\";\nimport Loader from \"../../components/Loader\";\nimport useDebounce from \"../../utils/useDebounce\";\nexport default function StoreStocks({ store }) {\n  const [value, setValue] = useState(\"\");\n  const [storeId, setStoreId] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const debouncedSearchTerm = useDebounce(value, 500);\n\n  const { stocks, loading } = useSelector((state) => state.storeStocks);\n\n  useEffect(() => {\n    if (value === \"\") {\n      dispatch(listStoreStocks(store.id));\n    }\n    dispatch({ type: STORE_STOCKS_RESET });\n  }, [dispatch, value, store.id]);\n\n  useEffect(() => {\n    dispatch(\n      search({\n        type: \"products_in_my_store\",\n        store: storeId,\n        searchString: debouncedSearchTerm,\n      })\n    );\n  }, [debouncedSearchTerm]);\n\n  const searchHandler = (e, store_id) => {\n    setValue(e.target.value);\n    setStoreId(store_id);\n  };\n\n  return (\n    <>\n      <tr>\n        <td colSpan=\"6\">\n          <Row className=\"d-flex justify-content-center\">\n            <Col md={12} xl={10}>\n              <Row className=\"d-flex justify-content-center mb-2\">\n                <Col xs={10} sm={8} md={6} xl={6}>\n                  <Form\n                    className=\"d-flex justify-content-center my-1\"\n                    style={{ height: \"2rem\" }}\n                  >\n                    <Form.Control\n                      type=\"search\"\n                      placeholder=\"Search for id, brand or product name\"\n                      aria-label=\"Search\"\n                      value={value}\n                      onChange={(e) => searchHandler(e, store.id)}\n                    />\n                  </Form>\n                </Col>\n              </Row>\n              <Row className=\"text-center\" style={{ fontSize: \"0.8rem\" }}>\n                <Col>\n                  <strong>ID</strong>\n                </Col>\n                <Col>\n                  <strong>BRAND</strong>\n                </Col>\n                <Col>\n                  <strong>NAME</strong>\n                </Col>\n                <Col>\n                  <strong>PRICE</strong>\n                </Col>\n                <Col>\n                  <strong>CATEGORY</strong>\n                </Col>\n                <Col>\n                  <strong>STOCK</strong>\n                </Col>\n              </Row>\n              {stocks?.map((stock, index) => {\n                return (\n                  <Row\n                    className=\"text-center my-1 py-1\"\n                    style={{\n                      border: \"solid 0.07rem lightgrey\",\n                      backgroundColor: \"#f2f5fa\",\n                      borderRadius: \"5px 5px 5px 5px\",\n                    }}\n                  >\n                    <Col>{stock.product.id}</Col>\n                    <Col>{stock.product.brand}</Col>\n                    <Col>{stock.product.name}</Col>\n                    <Col>{stock.product.price}</Col>\n                    <Col>{stock.product.category}</Col>\n                    <Col>{stock.number}</Col>\n                  </Row>\n                );\n              })}\n            </Col>\n          </Row>\n        </td>\n      </tr>\n    </>\n  );\n}\n","/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/utils/useDebounce.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/Message.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/productConstants.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/FormContainer.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/storeConstants.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/Rating.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/cartActions.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/userConstants.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/AddressInputField.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/utils/isNumberDecimal.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/Product/StocksCart.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/stockConstants.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/CheckoutSteps.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/actions/orderActions.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/CustomerOrder/OrderItemCard.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/orderConstants.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/containers/SellerOrder/OrderItemCard.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/userReducers.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/stockReducers.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/cartReducers.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/orderReducers.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/categoriesReducers.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/storeReducers.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/reducers/productReducers.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/categoriesConstants.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/searchConstants.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/store/constants/cartConstants.js",[],[],"/Users/umit/Desktop/shopping-land express-react/shopping-land/frontend/src/components/AddressSuggestions.js",[],[],{"ruleId":"445","severity":1,"message":"446","line":66,"column":54,"nodeType":"447","messageId":"448","endLine":66,"endColumn":55},{"ruleId":"445","severity":1,"message":"446","line":75,"column":49,"nodeType":"447","messageId":"448","endLine":75,"endColumn":50},{"ruleId":"445","severity":1,"message":"446","line":143,"column":51,"nodeType":"447","messageId":"448","endLine":143,"endColumn":52},{"ruleId":"445","severity":1,"message":"446","line":155,"column":49,"nodeType":"447","messageId":"448","endLine":155,"endColumn":50},{"ruleId":"449","severity":1,"message":"450","line":2,"column":36,"nodeType":"451","messageId":"452","endLine":2,"endColumn":39},{"ruleId":"449","severity":1,"message":"453","line":22,"column":17,"nodeType":"451","messageId":"452","endLine":22,"endColumn":25},{"ruleId":"454","severity":1,"message":"455","line":36,"column":6,"nodeType":"456","endLine":36,"endColumn":45,"suggestions":"457"},{"ruleId":"449","severity":1,"message":"458","line":33,"column":40,"nodeType":"451","messageId":"452","endLine":33,"endColumn":45},{"ruleId":"459","severity":1,"message":"460","line":110,"column":25,"nodeType":"447","messageId":"461","endLine":110,"endColumn":27},{"ruleId":"462","severity":1,"message":"463","line":155,"column":35,"nodeType":"464","messageId":"465","endLine":155,"endColumn":36},{"ruleId":"449","severity":1,"message":"466","line":2,"column":34,"nodeType":"451","messageId":"452","endLine":2,"endColumn":43},{"ruleId":"449","severity":1,"message":"467","line":16,"column":10,"nodeType":"451","messageId":"452","endLine":16,"endColumn":19},{"ruleId":"449","severity":1,"message":"468","line":16,"column":21,"nodeType":"451","messageId":"452","endLine":16,"endColumn":33},{"ruleId":"454","severity":1,"message":"469","line":58,"column":6,"nodeType":"456","endLine":58,"endColumn":46,"suggestions":"470"},{"ruleId":"459","severity":1,"message":"471","line":95,"column":28,"nodeType":"447","messageId":"461","endLine":95,"endColumn":30},{"ruleId":"449","severity":1,"message":"472","line":26,"column":9,"nodeType":"451","messageId":"452","endLine":26,"endColumn":17},{"ruleId":"454","severity":1,"message":"473","line":40,"column":6,"nodeType":"456","endLine":40,"endColumn":16,"suggestions":"474"},{"ruleId":"449","severity":1,"message":"475","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":25},{"ruleId":"449","severity":1,"message":"450","line":2,"column":18,"nodeType":"451","messageId":"452","endLine":2,"endColumn":21},{"ruleId":"449","severity":1,"message":"476","line":32,"column":20,"nodeType":"451","messageId":"452","endLine":32,"endColumn":42},{"ruleId":"459","severity":1,"message":"471","line":49,"column":31,"nodeType":"447","messageId":"461","endLine":49,"endColumn":33},{"ruleId":"449","severity":1,"message":"477","line":40,"column":14,"nodeType":"451","messageId":"452","endLine":40,"endColumn":40},{"ruleId":"449","severity":1,"message":"478","line":46,"column":14,"nodeType":"451","messageId":"452","endLine":46,"endColumn":40},{"ruleId":"459","severity":1,"message":"471","line":72,"column":29,"nodeType":"447","messageId":"461","endLine":72,"endColumn":31},{"ruleId":"454","severity":1,"message":"479","line":136,"column":6,"nodeType":"456","endLine":136,"endColumn":56,"suggestions":"480"},{"ruleId":"454","severity":1,"message":"481","line":28,"column":6,"nodeType":"456","endLine":28,"endColumn":49,"suggestions":"482"},{"ruleId":"449","severity":1,"message":"483","line":230,"column":13,"nodeType":"451","messageId":"452","endLine":230,"endColumn":17},{"ruleId":"449","severity":1,"message":"484","line":20,"column":5,"nodeType":"451","messageId":"452","endLine":20,"endColumn":18},{"ruleId":"449","severity":1,"message":"485","line":2,"column":20,"nodeType":"451","messageId":"452","endLine":2,"endColumn":23},{"ruleId":"449","severity":1,"message":"485","line":2,"column":20,"nodeType":"451","messageId":"452","endLine":2,"endColumn":23},{"ruleId":"449","severity":1,"message":"486","line":7,"column":8,"nodeType":"451","messageId":"452","endLine":7,"endColumn":14},{"ruleId":"449","severity":1,"message":"487","line":16,"column":19,"nodeType":"451","messageId":"452","endLine":16,"endColumn":26},{"ruleId":"454","severity":1,"message":"488","line":33,"column":6,"nodeType":"456","endLine":33,"endColumn":27,"suggestions":"489"},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'setStock' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["490"],"'error' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'FormGroup' is defined but never used.","'viewState' is assigned a value but never used.","'setViewState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'createStoreError'. Either include it or remove the dependency array.",["491"],"Expected '===' and instead saw '=='.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'users?.length'. Either include it or remove the dependency array.",["492"],"'useState' is defined but never used.","'loadingSellerOrderSend' is assigned a value but never used.","'loadingSellerOrderRetrieve' is assigned a value but never used.","'loadingSellerOrderComplete' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'hasInStorePickup', 'hasOnlinePurchase', 'sellerOrder', and 'sellerOrderId'. Either include them or remove the dependency array.",["493"],"React Hook useEffect has a missing dependency: 'rest'. Either include it or remove the dependency array.",["494"],"'data' is assigned a value but never used.","'statusClasses' is assigned a value but never used.","'Col' is defined but never used.","'Loader' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'storeId'. Either include them or remove the dependency array.",["495"],{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},"Update the dependencies array to be: [dispatch, deleteConfirm, itemToDelete, navigate]",{"range":"508","text":"509"},"Update the dependencies array to be: [dispatch, navigate, createStoreSuccess, createStoreError]",{"range":"510","text":"511"},"Update the dependencies array to be: [dispatch, users?.length]",{"range":"512","text":"513"},"Update the dependencies array to be: [dispatch, hasItemNotShipped, hasItemNotRetrieved, sellerOrder, sellerOrderId, hasOnlinePurchase, hasInStorePickup]",{"range":"514","text":"515"},"Update the dependencies array to be: [dispatch, debouncedSearchTerm, actionType, rest]",{"range":"516","text":"517"},"Update the dependencies array to be: [debouncedSearchTerm, dispatch, storeId]",{"range":"518","text":"519"},[1291,1330],"[dispatch, deleteConfirm, itemToDelete, navigate]",[1818,1858],"[dispatch, navigate, createStoreSuccess, createStoreError]",[1007,1017],"[dispatch, users?.length]",[4011,4061],"[dispatch, hasItemNotShipped, hasItemNotRetrieved, sellerOrder, sellerOrderId, hasOnlinePurchase, hasInStorePickup]",[648,691],"[dispatch, debouncedSearchTerm, actionType, rest]",[1107,1128],"[debouncedSearchTerm, dispatch, storeId]"]